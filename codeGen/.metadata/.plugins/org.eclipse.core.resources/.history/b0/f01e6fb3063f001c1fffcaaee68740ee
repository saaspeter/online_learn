package platform.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import platform.vo.Basiccommon;
import platform.vo.BasiccommonExample;

public class BasiccommonDAOImpl extends SqlMapClientDaoSupport implements BasiccommonDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public BasiccommonDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public void insert(Basiccommon record) {
        getSqlMapClientTemplate().insert("basiccommon.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int updateByPrimaryKeyWithoutBLOBs(Basiccommon record) {
        int rows = getSqlMapClientTemplate().update("basiccommon.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int updateByPrimaryKeyWithBLOBs(Basiccommon record) {
        int rows = getSqlMapClientTemplate().update("basiccommon.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int updateByPrimaryKeySelective(Basiccommon record) {
        int rows = getSqlMapClientTemplate().update("basiccommon.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithoutBLOBs(BasiccommonExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("basiccommon.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithoutBLOBs(BasiccommonExample example) {
        return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithBLOBs(BasiccommonExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("basiccommon.abatorgenerated_selectByExampleWithBLOBs", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithBLOBs(BasiccommonExample example) {
        return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public Basiccommon selectByPrimaryKey(Long userid) {
        Basiccommon key = new Basiccommon();
        key.setUserid(userid);
        Basiccommon record = (Basiccommon) getSqlMapClientTemplate().queryForObject("basiccommon.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int deleteByExample(BasiccommonExample example) {
        int rows = getSqlMapClientTemplate().delete("basiccommon.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int deleteByPrimaryKey(Long userid) {
        Basiccommon key = new Basiccommon();
        key.setUserid(userid);
        int rows = getSqlMapClientTemplate().delete("basiccommon.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getuserIDExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getUserid_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NULL", "Y");
            } else {
                parms.put("AND_userID_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NOT_NULL", "Y");
            } else {
                parms.put("AND_userID_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_EQUALS", "Y");
            } else {
                parms.put("AND_userID_EQUALS", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_userID_NOT_EQUALS", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_GT", "Y");
            } else {
                parms.put("AND_userID_GT", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_GE", "Y");
            } else {
                parms.put("AND_userID_GE", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_LT", "Y");
            } else {
                parms.put("AND_userID_LT", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_LE", "Y");
            } else {
                parms.put("AND_userID_LE", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getnameExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getName_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_NULL", "Y");
            } else {
                parms.put("AND_name_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_NOT_NULL", "Y");
            } else {
                parms.put("AND_name_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_EQUALS", "Y");
            } else {
                parms.put("AND_name_EQUALS", "Y");
            }
            parms.put("name", example.getName());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_name_NOT_EQUALS", "Y");
            }
            parms.put("name", example.getName());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_GT", "Y");
            } else {
                parms.put("AND_name_GT", "Y");
            }
            parms.put("name", example.getName());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_GE", "Y");
            } else {
                parms.put("AND_name_GE", "Y");
            }
            parms.put("name", example.getName());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_LT", "Y");
            } else {
                parms.put("AND_name_LT", "Y");
            }
            parms.put("name", example.getName());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_LE", "Y");
            } else {
                parms.put("AND_name_LE", "Y");
            }
            parms.put("name", example.getName());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_name_LIKE", "Y");
            } else {
                parms.put("AND_name_LIKE", "Y");
            }
            parms.put("name", example.getName());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getaccountExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getAccount_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_NULL", "Y");
            } else {
                parms.put("AND_account_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_NOT_NULL", "Y");
            } else {
                parms.put("AND_account_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_EQUALS", "Y");
            } else {
                parms.put("AND_account_EQUALS", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_account_NOT_EQUALS", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_GT", "Y");
            } else {
                parms.put("AND_account_GT", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_GE", "Y");
            } else {
                parms.put("AND_account_GE", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_LT", "Y");
            } else {
                parms.put("AND_account_LT", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_LE", "Y");
            } else {
                parms.put("AND_account_LE", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_account_LIKE", "Y");
            } else {
                parms.put("AND_account_LIKE", "Y");
            }
            parms.put("account", example.getAccount());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getnickNameExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getNickname_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_NULL", "Y");
            } else {
                parms.put("AND_nickName_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_NOT_NULL", "Y");
            } else {
                parms.put("AND_nickName_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_EQUALS", "Y");
            } else {
                parms.put("AND_nickName_EQUALS", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_nickName_NOT_EQUALS", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_GT", "Y");
            } else {
                parms.put("AND_nickName_GT", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_GE", "Y");
            } else {
                parms.put("AND_nickName_GE", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_LT", "Y");
            } else {
                parms.put("AND_nickName_LT", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_LE", "Y");
            } else {
                parms.put("AND_nickName_LE", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_nickName_LIKE", "Y");
            } else {
                parms.put("AND_nickName_LIKE", "Y");
            }
            parms.put("nickname", example.getNickname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getpassExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getPass_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_NULL", "Y");
            } else {
                parms.put("AND_pass_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_NOT_NULL", "Y");
            } else {
                parms.put("AND_pass_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_EQUALS", "Y");
            } else {
                parms.put("AND_pass_EQUALS", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_pass_NOT_EQUALS", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_GT", "Y");
            } else {
                parms.put("AND_pass_GT", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_GE", "Y");
            } else {
                parms.put("AND_pass_GE", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_LT", "Y");
            } else {
                parms.put("AND_pass_LT", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_LE", "Y");
            } else {
                parms.put("AND_pass_LE", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_pass_LIKE", "Y");
            } else {
                parms.put("AND_pass_LIKE", "Y");
            }
            parms.put("pass", example.getPass());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map gettipQuestionExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getTipquestion_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_NULL", "Y");
            } else {
                parms.put("AND_tipQuestion_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_NOT_NULL", "Y");
            } else {
                parms.put("AND_tipQuestion_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_EQUALS", "Y");
            } else {
                parms.put("AND_tipQuestion_EQUALS", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_tipQuestion_NOT_EQUALS", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_GT", "Y");
            } else {
                parms.put("AND_tipQuestion_GT", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_GE", "Y");
            } else {
                parms.put("AND_tipQuestion_GE", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_LT", "Y");
            } else {
                parms.put("AND_tipQuestion_LT", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_LE", "Y");
            } else {
                parms.put("AND_tipQuestion_LE", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipQuestion_LIKE", "Y");
            } else {
                parms.put("AND_tipQuestion_LIKE", "Y");
            }
            parms.put("tipquestion", example.getTipquestion());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map gettipAnswerExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getTipanswer_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_NULL", "Y");
            } else {
                parms.put("AND_tipAnswer_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_NOT_NULL", "Y");
            } else {
                parms.put("AND_tipAnswer_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_EQUALS", "Y");
            } else {
                parms.put("AND_tipAnswer_EQUALS", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_tipAnswer_NOT_EQUALS", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_GT", "Y");
            } else {
                parms.put("AND_tipAnswer_GT", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_GE", "Y");
            } else {
                parms.put("AND_tipAnswer_GE", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_LT", "Y");
            } else {
                parms.put("AND_tipAnswer_LT", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_LE", "Y");
            } else {
                parms.put("AND_tipAnswer_LE", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tipAnswer_LIKE", "Y");
            } else {
                parms.put("AND_tipAnswer_LIKE", "Y");
            }
            parms.put("tipanswer", example.getTipanswer());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getcountryExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getCountry_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_NULL", "Y");
            } else {
                parms.put("AND_country_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_NOT_NULL", "Y");
            } else {
                parms.put("AND_country_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_EQUALS", "Y");
            } else {
                parms.put("AND_country_EQUALS", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_country_NOT_EQUALS", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_GT", "Y");
            } else {
                parms.put("AND_country_GT", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_GE", "Y");
            } else {
                parms.put("AND_country_GE", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_LT", "Y");
            } else {
                parms.put("AND_country_LT", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_country_LE", "Y");
            } else {
                parms.put("AND_country_LE", "Y");
            }
            parms.put("country", example.getCountry());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getlanguageExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getLanguage_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_NULL", "Y");
            } else {
                parms.put("AND_language_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_NOT_NULL", "Y");
            } else {
                parms.put("AND_language_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_EQUALS", "Y");
            } else {
                parms.put("AND_language_EQUALS", "Y");
            }
            parms.put("language", example.getLanguage());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_language_NOT_EQUALS", "Y");
            }
            parms.put("language", example.getLanguage());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_GT", "Y");
            } else {
                parms.put("AND_language_GT", "Y");
            }
            parms.put("language", example.getLanguage());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_GE", "Y");
            } else {
                parms.put("AND_language_GE", "Y");
            }
            parms.put("language", example.getLanguage());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_LT", "Y");
            } else {
                parms.put("AND_language_LT", "Y");
            }
            parms.put("language", example.getLanguage());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_language_LE", "Y");
            } else {
                parms.put("AND_language_LE", "Y");
            }
            parms.put("language", example.getLanguage());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getmoneyExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getMoney_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_NULL", "Y");
            } else {
                parms.put("AND_money_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_NOT_NULL", "Y");
            } else {
                parms.put("AND_money_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_EQUALS", "Y");
            } else {
                parms.put("AND_money_EQUALS", "Y");
            }
            parms.put("money", example.getMoney());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_money_NOT_EQUALS", "Y");
            }
            parms.put("money", example.getMoney());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_GT", "Y");
            } else {
                parms.put("AND_money_GT", "Y");
            }
            parms.put("money", example.getMoney());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_GE", "Y");
            } else {
                parms.put("AND_money_GE", "Y");
            }
            parms.put("money", example.getMoney());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_LT", "Y");
            } else {
                parms.put("AND_money_LT", "Y");
            }
            parms.put("money", example.getMoney());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_money_LE", "Y");
            } else {
                parms.put("AND_money_LE", "Y");
            }
            parms.put("money", example.getMoney());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getemailExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getEmail_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_NULL", "Y");
            } else {
                parms.put("AND_email_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_NOT_NULL", "Y");
            } else {
                parms.put("AND_email_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_EQUALS", "Y");
            } else {
                parms.put("AND_email_EQUALS", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_email_NOT_EQUALS", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_GT", "Y");
            } else {
                parms.put("AND_email_GT", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_GE", "Y");
            } else {
                parms.put("AND_email_GE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_LT", "Y");
            } else {
                parms.put("AND_email_LT", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_LE", "Y");
            } else {
                parms.put("AND_email_LE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_email_LIKE", "Y");
            } else {
                parms.put("AND_email_LIKE", "Y");
            }
            parms.put("email", example.getEmail());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getcellPhoneExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getCellphone_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_NULL", "Y");
            } else {
                parms.put("AND_cellPhone_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_NOT_NULL", "Y");
            } else {
                parms.put("AND_cellPhone_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_EQUALS", "Y");
            } else {
                parms.put("AND_cellPhone_EQUALS", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_cellPhone_NOT_EQUALS", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_GT", "Y");
            } else {
                parms.put("AND_cellPhone_GT", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_GE", "Y");
            } else {
                parms.put("AND_cellPhone_GE", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_LT", "Y");
            } else {
                parms.put("AND_cellPhone_LT", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_LE", "Y");
            } else {
                parms.put("AND_cellPhone_LE", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        case BasiccommonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_cellPhone_LIKE", "Y");
            } else {
                parms.put("AND_cellPhone_LIKE", "Y");
            }
            parms.put("cellphone", example.getCellphone());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getuserTypeExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        switch (example.getUsertype_Indicator()) {
        case BasiccommonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_NULL", "Y");
            } else {
                parms.put("AND_userType_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_NOT_NULL", "Y");
            } else {
                parms.put("AND_userType_NOT_NULL", "Y");
            }
            break;
        case BasiccommonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_EQUALS", "Y");
            } else {
                parms.put("AND_userType_EQUALS", "Y");
            }
            parms.put("usertype", example.getUsertype());
            break;
        case BasiccommonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_userType_NOT_EQUALS", "Y");
            }
            parms.put("usertype", example.getUsertype());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_GT", "Y");
            } else {
                parms.put("AND_userType_GT", "Y");
            }
            parms.put("usertype", example.getUsertype());
            break;
        case BasiccommonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_GE", "Y");
            } else {
                parms.put("AND_userType_GE", "Y");
            }
            parms.put("usertype", example.getUsertype());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_LT", "Y");
            } else {
                parms.put("AND_userType_LT", "Y");
            }
            parms.put("usertype", example.getUsertype());
            break;
        case BasiccommonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userType_LE", "Y");
            } else {
                parms.put("AND_userType_LE", "Y");
            }
            parms.put("usertype", example.getUsertype());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table basiccommon
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getExampleParms(BasiccommonExample example) {
        Map parms = new HashMap();
        parms.putAll(getuserIDExampleParms(example));
        parms.putAll(getnameExampleParms(example));
        parms.putAll(getaccountExampleParms(example));
        parms.putAll(getnickNameExampleParms(example));
        parms.putAll(getpassExampleParms(example));
        parms.putAll(gettipQuestionExampleParms(example));
        parms.putAll(gettipAnswerExampleParms(example));
        parms.putAll(getcountryExampleParms(example));
        parms.putAll(getlanguageExampleParms(example));
        parms.putAll(getmoneyExampleParms(example));
        parms.putAll(getemailExampleParms(example));
        parms.putAll(getcellPhoneExampleParms(example));
        parms.putAll(getuserTypeExampleParms(example));
        return parms;
    }
}