package netTest.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import netTest.vo.Testperson;
import netTest.vo.TestpersonExample;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class TestpersonDAOImpl extends SqlMapClientDaoSupport implements TestpersonDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public TestpersonDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public void insert(Testperson record) {
        getSqlMapClientTemplate().insert("testperson.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public int updateByPrimaryKeyWithoutBLOBs(Testperson record) {
        int rows = getSqlMapClientTemplate().update("testperson.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public int updateByPrimaryKeyWithBLOBs(Testperson record) {
        int rows = getSqlMapClientTemplate().update("testperson.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public int updateByPrimaryKeySelective(Testperson record) {
        int rows = getSqlMapClientTemplate().update("testperson.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public List selectByExampleWithoutBLOBs(TestpersonExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("testperson.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public List selectByExampleWithoutBLOBs(TestpersonExample example) {
        return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public List selectByExampleWithBLOBs(TestpersonExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("testperson.abatorgenerated_selectByExampleWithBLOBs", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public List selectByExampleWithBLOBs(TestpersonExample example) {
        return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public Testperson selectByPrimaryKey(Long testpersonid) {
        Testperson key = new Testperson();
        key.setTestpersonid(testpersonid);
        Testperson record = (Testperson) getSqlMapClientTemplate().queryForObject("testperson.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public int deleteByExample(TestpersonExample example) {
        int rows = getSqlMapClientTemplate().delete("testperson.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    public int deleteByPrimaryKey(Long testpersonid) {
        Testperson key = new Testperson();
        key.setTestpersonid(testpersonid);
        int rows = getSqlMapClientTemplate().delete("testperson.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestPersonIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestpersonid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_NULL", "Y");
            } else {
                parms.put("AND_testPersonID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPersonID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonID_EQUALS", "Y");
            }
            parms.put("testpersonid", example.getTestpersonid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonID_NOT_EQUALS", "Y");
            }
            parms.put("testpersonid", example.getTestpersonid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_GT", "Y");
            } else {
                parms.put("AND_testPersonID_GT", "Y");
            }
            parms.put("testpersonid", example.getTestpersonid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_GE", "Y");
            } else {
                parms.put("AND_testPersonID_GE", "Y");
            }
            parms.put("testpersonid", example.getTestpersonid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_LT", "Y");
            } else {
                parms.put("AND_testPersonID_LT", "Y");
            }
            parms.put("testpersonid", example.getTestpersonid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonID_LE", "Y");
            } else {
                parms.put("AND_testPersonID_LE", "Y");
            }
            parms.put("testpersonid", example.getTestpersonid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getshopIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getShopid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NULL", "Y");
            } else {
                parms.put("AND_shopID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_NULL", "Y");
            } else {
                parms.put("AND_shopID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_NOT_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GT", "Y");
            } else {
                parms.put("AND_shopID_GT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GE", "Y");
            } else {
                parms.put("AND_shopID_GE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LT", "Y");
            } else {
                parms.put("AND_shopID_LT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LE", "Y");
            } else {
                parms.put("AND_shopID_LE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestDeptIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestdeptid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_NULL", "Y");
            } else {
                parms.put("AND_testDeptID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_NOT_NULL", "Y");
            } else {
                parms.put("AND_testDeptID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_EQUALS", "Y");
            } else {
                parms.put("AND_testDeptID_EQUALS", "Y");
            }
            parms.put("testdeptid", example.getTestdeptid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testDeptID_NOT_EQUALS", "Y");
            }
            parms.put("testdeptid", example.getTestdeptid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_GT", "Y");
            } else {
                parms.put("AND_testDeptID_GT", "Y");
            }
            parms.put("testdeptid", example.getTestdeptid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_GE", "Y");
            } else {
                parms.put("AND_testDeptID_GE", "Y");
            }
            parms.put("testdeptid", example.getTestdeptid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_LT", "Y");
            } else {
                parms.put("AND_testDeptID_LT", "Y");
            }
            parms.put("testdeptid", example.getTestdeptid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testDeptID_LE", "Y");
            } else {
                parms.put("AND_testDeptID_LE", "Y");
            }
            parms.put("testdeptid", example.getTestdeptid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getuserIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getUserid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NULL", "Y");
            } else {
                parms.put("AND_userID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NOT_NULL", "Y");
            } else {
                parms.put("AND_userID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_EQUALS", "Y");
            } else {
                parms.put("AND_userID_EQUALS", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_userID_NOT_EQUALS", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_GT", "Y");
            } else {
                parms.put("AND_userID_GT", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_GE", "Y");
            } else {
                parms.put("AND_userID_GE", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_LT", "Y");
            } else {
                parms.put("AND_userID_LT", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_LE", "Y");
            } else {
                parms.put("AND_userID_LE", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getpersonNameExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getPersonname_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_NULL", "Y");
            } else {
                parms.put("AND_personName_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_NOT_NULL", "Y");
            } else {
                parms.put("AND_personName_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_EQUALS", "Y");
            } else {
                parms.put("AND_personName_EQUALS", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_personName_NOT_EQUALS", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_GT", "Y");
            } else {
                parms.put("AND_personName_GT", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_GE", "Y");
            } else {
                parms.put("AND_personName_GE", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_LT", "Y");
            } else {
                parms.put("AND_personName_LT", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_LE", "Y");
            } else {
                parms.put("AND_personName_LE", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        case TestpersonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_personName_LIKE", "Y");
            } else {
                parms.put("AND_personName_LIKE", "Y");
            }
            parms.put("personname", example.getPersonname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getdeptIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getDeptid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_NULL", "Y");
            } else {
                parms.put("AND_deptID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_NOT_NULL", "Y");
            } else {
                parms.put("AND_deptID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_EQUALS", "Y");
            } else {
                parms.put("AND_deptID_EQUALS", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deptID_NOT_EQUALS", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_GT", "Y");
            } else {
                parms.put("AND_deptID_GT", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_GE", "Y");
            } else {
                parms.put("AND_deptID_GE", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_LT", "Y");
            } else {
                parms.put("AND_deptID_LT", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_LE", "Y");
            } else {
                parms.put("AND_deptID_LE", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getdeptNameExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getDeptname_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_NULL", "Y");
            } else {
                parms.put("AND_deptName_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_NOT_NULL", "Y");
            } else {
                parms.put("AND_deptName_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_EQUALS", "Y");
            } else {
                parms.put("AND_deptName_EQUALS", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deptName_NOT_EQUALS", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_GT", "Y");
            } else {
                parms.put("AND_deptName_GT", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_GE", "Y");
            } else {
                parms.put("AND_deptName_GE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_LT", "Y");
            } else {
                parms.put("AND_deptName_LT", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_LE", "Y");
            } else {
                parms.put("AND_deptName_LE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestpersonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_LIKE", "Y");
            } else {
                parms.put("AND_deptName_LIKE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getproductLevelExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getProductlevel_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_NULL", "Y");
            } else {
                parms.put("AND_productLevel_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_NOT_NULL", "Y");
            } else {
                parms.put("AND_productLevel_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_EQUALS", "Y");
            } else {
                parms.put("AND_productLevel_EQUALS", "Y");
            }
            parms.put("productlevel", example.getProductlevel());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productLevel_NOT_EQUALS", "Y");
            }
            parms.put("productlevel", example.getProductlevel());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_GT", "Y");
            } else {
                parms.put("AND_productLevel_GT", "Y");
            }
            parms.put("productlevel", example.getProductlevel());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_GE", "Y");
            } else {
                parms.put("AND_productLevel_GE", "Y");
            }
            parms.put("productlevel", example.getProductlevel());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_LT", "Y");
            } else {
                parms.put("AND_productLevel_LT", "Y");
            }
            parms.put("productlevel", example.getProductlevel());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevel_LE", "Y");
            } else {
                parms.put("AND_productLevel_LE", "Y");
            }
            parms.put("productlevel", example.getProductlevel());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getproductLevelNameExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getProductlevelname_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_NULL", "Y");
            } else {
                parms.put("AND_productLevelName_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_NOT_NULL", "Y");
            } else {
                parms.put("AND_productLevelName_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_EQUALS", "Y");
            } else {
                parms.put("AND_productLevelName_EQUALS", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productLevelName_NOT_EQUALS", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_GT", "Y");
            } else {
                parms.put("AND_productLevelName_GT", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_GE", "Y");
            } else {
                parms.put("AND_productLevelName_GE", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_LT", "Y");
            } else {
                parms.put("AND_productLevelName_LT", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_LE", "Y");
            } else {
                parms.put("AND_productLevelName_LE", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        case TestpersonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productLevelName_LIKE", "Y");
            } else {
                parms.put("AND_productLevelName_LIKE", "Y");
            }
            parms.put("productlevelname", example.getProductlevelname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_NULL", "Y");
            } else {
                parms.put("AND_testID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_NOT_NULL", "Y");
            } else {
                parms.put("AND_testID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_EQUALS", "Y");
            } else {
                parms.put("AND_testID_EQUALS", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testID_NOT_EQUALS", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_GT", "Y");
            } else {
                parms.put("AND_testID_GT", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_GE", "Y");
            } else {
                parms.put("AND_testID_GE", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_LT", "Y");
            } else {
                parms.put("AND_testID_LT", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_LE", "Y");
            } else {
                parms.put("AND_testID_LE", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestNameExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestname_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_NULL", "Y");
            } else {
                parms.put("AND_testName_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_NOT_NULL", "Y");
            } else {
                parms.put("AND_testName_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_EQUALS", "Y");
            } else {
                parms.put("AND_testName_EQUALS", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testName_NOT_EQUALS", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_GT", "Y");
            } else {
                parms.put("AND_testName_GT", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_GE", "Y");
            } else {
                parms.put("AND_testName_GE", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_LT", "Y");
            } else {
                parms.put("AND_testName_LT", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_LE", "Y");
            } else {
                parms.put("AND_testName_LE", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestpersonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_LIKE", "Y");
            } else {
                parms.put("AND_testName_LIKE", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestPaperIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestpaperid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_NULL", "Y");
            } else {
                parms.put("AND_testPaperID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPaperID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_EQUALS", "Y");
            } else {
                parms.put("AND_testPaperID_EQUALS", "Y");
            }
            parms.put("testpaperid", example.getTestpaperid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPaperID_NOT_EQUALS", "Y");
            }
            parms.put("testpaperid", example.getTestpaperid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_GT", "Y");
            } else {
                parms.put("AND_testPaperID_GT", "Y");
            }
            parms.put("testpaperid", example.getTestpaperid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_GE", "Y");
            } else {
                parms.put("AND_testPaperID_GE", "Y");
            }
            parms.put("testpaperid", example.getTestpaperid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_LT", "Y");
            } else {
                parms.put("AND_testPaperID_LT", "Y");
            }
            parms.put("testpaperid", example.getTestpaperid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPaperID_LE", "Y");
            } else {
                parms.put("AND_testPaperID_LE", "Y");
            }
            parms.put("testpaperid", example.getTestpaperid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getpaperIDExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getPaperid_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_NULL", "Y");
            } else {
                parms.put("AND_paperID_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_NOT_NULL", "Y");
            } else {
                parms.put("AND_paperID_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_EQUALS", "Y");
            } else {
                parms.put("AND_paperID_EQUALS", "Y");
            }
            parms.put("paperid", example.getPaperid());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_paperID_NOT_EQUALS", "Y");
            }
            parms.put("paperid", example.getPaperid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_GT", "Y");
            } else {
                parms.put("AND_paperID_GT", "Y");
            }
            parms.put("paperid", example.getPaperid());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_GE", "Y");
            } else {
                parms.put("AND_paperID_GE", "Y");
            }
            parms.put("paperid", example.getPaperid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_LT", "Y");
            } else {
                parms.put("AND_paperID_LT", "Y");
            }
            parms.put("paperid", example.getPaperid());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperID_LE", "Y");
            } else {
                parms.put("AND_paperID_LE", "Y");
            }
            parms.put("paperid", example.getPaperid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getpaperNameExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getPapername_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_NULL", "Y");
            } else {
                parms.put("AND_paperName_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_NOT_NULL", "Y");
            } else {
                parms.put("AND_paperName_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_EQUALS", "Y");
            } else {
                parms.put("AND_paperName_EQUALS", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_paperName_NOT_EQUALS", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_GT", "Y");
            } else {
                parms.put("AND_paperName_GT", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_GE", "Y");
            } else {
                parms.put("AND_paperName_GE", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_LT", "Y");
            } else {
                parms.put("AND_paperName_LT", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_LE", "Y");
            } else {
                parms.put("AND_paperName_LE", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        case TestpersonExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_paperName_LIKE", "Y");
            } else {
                parms.put("AND_paperName_LIKE", "Y");
            }
            parms.put("papername", example.getPapername());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestPersonStartTimeExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestpersonstarttime_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_NULL", "Y");
            } else {
                parms.put("AND_testPersonStartTime_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPersonStartTime_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonStartTime_EQUALS", "Y");
            }
            parms.put("testpersonstarttime", example.getTestpersonstarttime());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonStartTime_NOT_EQUALS", "Y");
            }
            parms.put("testpersonstarttime", example.getTestpersonstarttime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_GT", "Y");
            } else {
                parms.put("AND_testPersonStartTime_GT", "Y");
            }
            parms.put("testpersonstarttime", example.getTestpersonstarttime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_GE", "Y");
            } else {
                parms.put("AND_testPersonStartTime_GE", "Y");
            }
            parms.put("testpersonstarttime", example.getTestpersonstarttime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_LT", "Y");
            } else {
                parms.put("AND_testPersonStartTime_LT", "Y");
            }
            parms.put("testpersonstarttime", example.getTestpersonstarttime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStartTime_LE", "Y");
            } else {
                parms.put("AND_testPersonStartTime_LE", "Y");
            }
            parms.put("testpersonstarttime", example.getTestpersonstarttime());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestPersonUseTimeExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestpersonusetime_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_NULL", "Y");
            } else {
                parms.put("AND_testPersonUseTime_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPersonUseTime_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonUseTime_EQUALS", "Y");
            }
            parms.put("testpersonusetime", example.getTestpersonusetime());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonUseTime_NOT_EQUALS", "Y");
            }
            parms.put("testpersonusetime", example.getTestpersonusetime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_GT", "Y");
            } else {
                parms.put("AND_testPersonUseTime_GT", "Y");
            }
            parms.put("testpersonusetime", example.getTestpersonusetime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_GE", "Y");
            } else {
                parms.put("AND_testPersonUseTime_GE", "Y");
            }
            parms.put("testpersonusetime", example.getTestpersonusetime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_LT", "Y");
            } else {
                parms.put("AND_testPersonUseTime_LT", "Y");
            }
            parms.put("testpersonusetime", example.getTestpersonusetime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonUseTime_LE", "Y");
            } else {
                parms.put("AND_testPersonUseTime_LE", "Y");
            }
            parms.put("testpersonusetime", example.getTestpersonusetime());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestPersonEndTimeExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestpersonendtime_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_NULL", "Y");
            } else {
                parms.put("AND_testPersonEndTime_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPersonEndTime_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonEndTime_EQUALS", "Y");
            }
            parms.put("testpersonendtime", example.getTestpersonendtime());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonEndTime_NOT_EQUALS", "Y");
            }
            parms.put("testpersonendtime", example.getTestpersonendtime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_GT", "Y");
            } else {
                parms.put("AND_testPersonEndTime_GT", "Y");
            }
            parms.put("testpersonendtime", example.getTestpersonendtime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_GE", "Y");
            } else {
                parms.put("AND_testPersonEndTime_GE", "Y");
            }
            parms.put("testpersonendtime", example.getTestpersonendtime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_LT", "Y");
            } else {
                parms.put("AND_testPersonEndTime_LT", "Y");
            }
            parms.put("testpersonendtime", example.getTestpersonendtime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonEndTime_LE", "Y");
            } else {
                parms.put("AND_testPersonEndTime_LE", "Y");
            }
            parms.put("testpersonendtime", example.getTestpersonendtime());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getobjectScoreExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getObjectscore_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_NULL", "Y");
            } else {
                parms.put("AND_objectScore_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_NOT_NULL", "Y");
            } else {
                parms.put("AND_objectScore_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_EQUALS", "Y");
            } else {
                parms.put("AND_objectScore_EQUALS", "Y");
            }
            parms.put("objectscore", example.getObjectscore());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_objectScore_NOT_EQUALS", "Y");
            }
            parms.put("objectscore", example.getObjectscore());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_GT", "Y");
            } else {
                parms.put("AND_objectScore_GT", "Y");
            }
            parms.put("objectscore", example.getObjectscore());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_GE", "Y");
            } else {
                parms.put("AND_objectScore_GE", "Y");
            }
            parms.put("objectscore", example.getObjectscore());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_LT", "Y");
            } else {
                parms.put("AND_objectScore_LT", "Y");
            }
            parms.put("objectscore", example.getObjectscore());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_objectScore_LE", "Y");
            } else {
                parms.put("AND_objectScore_LE", "Y");
            }
            parms.put("objectscore", example.getObjectscore());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettotalScoreExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTotalscore_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_NULL", "Y");
            } else {
                parms.put("AND_totalScore_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_NOT_NULL", "Y");
            } else {
                parms.put("AND_totalScore_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_EQUALS", "Y");
            } else {
                parms.put("AND_totalScore_EQUALS", "Y");
            }
            parms.put("totalscore", example.getTotalscore());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_totalScore_NOT_EQUALS", "Y");
            }
            parms.put("totalscore", example.getTotalscore());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_GT", "Y");
            } else {
                parms.put("AND_totalScore_GT", "Y");
            }
            parms.put("totalscore", example.getTotalscore());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_GE", "Y");
            } else {
                parms.put("AND_totalScore_GE", "Y");
            }
            parms.put("totalscore", example.getTotalscore());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_LT", "Y");
            } else {
                parms.put("AND_totalScore_LT", "Y");
            }
            parms.put("totalscore", example.getTotalscore());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_totalScore_LE", "Y");
            } else {
                parms.put("AND_totalScore_LE", "Y");
            }
            parms.put("totalscore", example.getTotalscore());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getisQualifyExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getIsqualify_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_NULL", "Y");
            } else {
                parms.put("AND_isQualify_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_NOT_NULL", "Y");
            } else {
                parms.put("AND_isQualify_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_EQUALS", "Y");
            } else {
                parms.put("AND_isQualify_EQUALS", "Y");
            }
            parms.put("isqualify", example.getIsqualify());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_isQualify_NOT_EQUALS", "Y");
            }
            parms.put("isqualify", example.getIsqualify());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_GT", "Y");
            } else {
                parms.put("AND_isQualify_GT", "Y");
            }
            parms.put("isqualify", example.getIsqualify());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_GE", "Y");
            } else {
                parms.put("AND_isQualify_GE", "Y");
            }
            parms.put("isqualify", example.getIsqualify());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_LT", "Y");
            } else {
                parms.put("AND_isQualify_LT", "Y");
            }
            parms.put("isqualify", example.getIsqualify());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isQualify_LE", "Y");
            } else {
                parms.put("AND_isQualify_LE", "Y");
            }
            parms.put("isqualify", example.getIsqualify());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map gettestPersonStatusExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getTestpersonstatus_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_NULL", "Y");
            } else {
                parms.put("AND_testPersonStatus_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPersonStatus_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonStatus_EQUALS", "Y");
            }
            parms.put("testpersonstatus", example.getTestpersonstatus());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPersonStatus_NOT_EQUALS", "Y");
            }
            parms.put("testpersonstatus", example.getTestpersonstatus());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_GT", "Y");
            } else {
                parms.put("AND_testPersonStatus_GT", "Y");
            }
            parms.put("testpersonstatus", example.getTestpersonstatus());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_GE", "Y");
            } else {
                parms.put("AND_testPersonStatus_GE", "Y");
            }
            parms.put("testpersonstatus", example.getTestpersonstatus());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_LT", "Y");
            } else {
                parms.put("AND_testPersonStatus_LT", "Y");
            }
            parms.put("testpersonstatus", example.getTestpersonstatus());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPersonStatus_LE", "Y");
            } else {
                parms.put("AND_testPersonStatus_LE", "Y");
            }
            parms.put("testpersonstatus", example.getTestpersonstatus());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getdeleteTimeExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getDeletetime_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_NULL", "Y");
            } else {
                parms.put("AND_deleteTime_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_NOT_NULL", "Y");
            } else {
                parms.put("AND_deleteTime_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_EQUALS", "Y");
            } else {
                parms.put("AND_deleteTime_EQUALS", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deleteTime_NOT_EQUALS", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_GT", "Y");
            } else {
                parms.put("AND_deleteTime_GT", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_GE", "Y");
            } else {
                parms.put("AND_deleteTime_GE", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_LT", "Y");
            } else {
                parms.put("AND_deleteTime_LT", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_LE", "Y");
            } else {
                parms.put("AND_deleteTime_LE", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getvisibleExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        switch (example.getVisible_Indicator()) {
        case TestpersonExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_NULL", "Y");
            } else {
                parms.put("AND_visible_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_NOT_NULL", "Y");
            } else {
                parms.put("AND_visible_NOT_NULL", "Y");
            }
            break;
        case TestpersonExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_EQUALS", "Y");
            } else {
                parms.put("AND_visible_EQUALS", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestpersonExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_visible_NOT_EQUALS", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_GT", "Y");
            } else {
                parms.put("AND_visible_GT", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestpersonExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_GE", "Y");
            } else {
                parms.put("AND_visible_GE", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_LT", "Y");
            } else {
                parms.put("AND_visible_LT", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestpersonExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_LE", "Y");
            } else {
                parms.put("AND_visible_LE", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testperson
     *
     * @abatorgenerated Tue Jul 31 09:18:15 CST 2007
     */
    private Map getExampleParms(TestpersonExample example) {
        Map parms = new HashMap();
        parms.putAll(gettestPersonIDExampleParms(example));
        parms.putAll(getshopIDExampleParms(example));
        parms.putAll(gettestDeptIDExampleParms(example));
        parms.putAll(getuserIDExampleParms(example));
        parms.putAll(getpersonNameExampleParms(example));
        parms.putAll(getdeptIDExampleParms(example));
        parms.putAll(getdeptNameExampleParms(example));
        parms.putAll(getproductLevelExampleParms(example));
        parms.putAll(getproductLevelNameExampleParms(example));
        parms.putAll(gettestIDExampleParms(example));
        parms.putAll(gettestNameExampleParms(example));
        parms.putAll(gettestPaperIDExampleParms(example));
        parms.putAll(getpaperIDExampleParms(example));
        parms.putAll(getpaperNameExampleParms(example));
        parms.putAll(gettestPersonStartTimeExampleParms(example));
        parms.putAll(gettestPersonUseTimeExampleParms(example));
        parms.putAll(gettestPersonEndTimeExampleParms(example));
        parms.putAll(getobjectScoreExampleParms(example));
        parms.putAll(gettotalScoreExampleParms(example));
        parms.putAll(getisQualifyExampleParms(example));
        parms.putAll(gettestPersonStatusExampleParms(example));
        parms.putAll(getdeleteTimeExampleParms(example));
        parms.putAll(getvisibleExampleParms(example));
        return parms;
    }
}