package platform.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import platform.vo.Product;
import platform.vo.ProductExample;

public class ProductDAOImpl extends SqlMapClientDaoSupport implements ProductDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public ProductDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public void insert(Product record) {
        getSqlMapClientTemplate().insert("product.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int updateByPrimaryKeyWithoutBLOBs(Product record) {
        int rows = getSqlMapClientTemplate().update("product.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int updateByPrimaryKeyWithBLOBs(Product record) {
        int rows = getSqlMapClientTemplate().update("product.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int updateByPrimaryKeySelective(Product record) {
        int rows = getSqlMapClientTemplate().update("product.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithoutBLOBs(ProductExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("product.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithoutBLOBs(ProductExample example) {
        return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithBLOBs(ProductExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("product.abatorgenerated_selectByExampleWithBLOBs", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public List selectByExampleWithBLOBs(ProductExample example) {
        return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public Product selectByPrimaryKey(Long productid) {
        Product key = new Product();
        key.setProductid(productid);
        Product record = (Product) getSqlMapClientTemplate().queryForObject("product.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int deleteByExample(ProductExample example) {
        int rows = getSqlMapClientTemplate().delete("product.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    public int deleteByPrimaryKey(Long productid) {
        Product key = new Product();
        key.setProductid(productid);
        int rows = getSqlMapClientTemplate().delete("product.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getproductIDExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getProductid_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_NULL", "Y");
            } else {
                parms.put("AND_productID_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_NOT_NULL", "Y");
            } else {
                parms.put("AND_productID_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_EQUALS", "Y");
            } else {
                parms.put("AND_productID_EQUALS", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productID_NOT_EQUALS", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_GT", "Y");
            } else {
                parms.put("AND_productID_GT", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_GE", "Y");
            } else {
                parms.put("AND_productID_GE", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_LT", "Y");
            } else {
                parms.put("AND_productID_LT", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_LE", "Y");
            } else {
                parms.put("AND_productID_LE", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getshopIDExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getShopid_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NULL", "Y");
            } else {
                parms.put("AND_shopID_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_NULL", "Y");
            } else {
                parms.put("AND_shopID_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_NOT_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GT", "Y");
            } else {
                parms.put("AND_shopID_GT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GE", "Y");
            } else {
                parms.put("AND_shopID_GE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LT", "Y");
            } else {
                parms.put("AND_shopID_LT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LE", "Y");
            } else {
                parms.put("AND_shopID_LE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getproductNameExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getProductname_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_NULL", "Y");
            } else {
                parms.put("AND_productName_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_NOT_NULL", "Y");
            } else {
                parms.put("AND_productName_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_EQUALS", "Y");
            } else {
                parms.put("AND_productName_EQUALS", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productName_NOT_EQUALS", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_GT", "Y");
            } else {
                parms.put("AND_productName_GT", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_GE", "Y");
            } else {
                parms.put("AND_productName_GE", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_LT", "Y");
            } else {
                parms.put("AND_productName_LT", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_LE", "Y");
            } else {
                parms.put("AND_productName_LE", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case ProductExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_LIKE", "Y");
            } else {
                parms.put("AND_productName_LIKE", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getcategoryIDExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getCategoryid_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_NULL", "Y");
            } else {
                parms.put("AND_categoryID_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_NOT_NULL", "Y");
            } else {
                parms.put("AND_categoryID_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_EQUALS", "Y");
            } else {
                parms.put("AND_categoryID_EQUALS", "Y");
            }
            parms.put("categoryid", example.getCategoryid());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_categoryID_NOT_EQUALS", "Y");
            }
            parms.put("categoryid", example.getCategoryid());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_GT", "Y");
            } else {
                parms.put("AND_categoryID_GT", "Y");
            }
            parms.put("categoryid", example.getCategoryid());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_GE", "Y");
            } else {
                parms.put("AND_categoryID_GE", "Y");
            }
            parms.put("categoryid", example.getCategoryid());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_LT", "Y");
            } else {
                parms.put("AND_categoryID_LT", "Y");
            }
            parms.put("categoryid", example.getCategoryid());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_categoryID_LE", "Y");
            } else {
                parms.put("AND_categoryID_LE", "Y");
            }
            parms.put("categoryid", example.getCategoryid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getproductCostExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getProductcost_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_NULL", "Y");
            } else {
                parms.put("AND_productCost_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_NOT_NULL", "Y");
            } else {
                parms.put("AND_productCost_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_EQUALS", "Y");
            } else {
                parms.put("AND_productCost_EQUALS", "Y");
            }
            parms.put("productcost", example.getProductcost());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productCost_NOT_EQUALS", "Y");
            }
            parms.put("productcost", example.getProductcost());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_GT", "Y");
            } else {
                parms.put("AND_productCost_GT", "Y");
            }
            parms.put("productcost", example.getProductcost());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_GE", "Y");
            } else {
                parms.put("AND_productCost_GE", "Y");
            }
            parms.put("productcost", example.getProductcost());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_LT", "Y");
            } else {
                parms.put("AND_productCost_LT", "Y");
            }
            parms.put("productcost", example.getProductcost());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productCost_LE", "Y");
            } else {
                parms.put("AND_productCost_LE", "Y");
            }
            parms.put("productcost", example.getProductcost());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getcanTryExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getCantry_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_NULL", "Y");
            } else {
                parms.put("AND_canTry_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_NOT_NULL", "Y");
            } else {
                parms.put("AND_canTry_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_EQUALS", "Y");
            } else {
                parms.put("AND_canTry_EQUALS", "Y");
            }
            parms.put("cantry", example.getCantry());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_canTry_NOT_EQUALS", "Y");
            }
            parms.put("cantry", example.getCantry());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_GT", "Y");
            } else {
                parms.put("AND_canTry_GT", "Y");
            }
            parms.put("cantry", example.getCantry());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_GE", "Y");
            } else {
                parms.put("AND_canTry_GE", "Y");
            }
            parms.put("cantry", example.getCantry());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_LT", "Y");
            } else {
                parms.put("AND_canTry_LT", "Y");
            }
            parms.put("cantry", example.getCantry());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_canTry_LE", "Y");
            } else {
                parms.put("AND_canTry_LE", "Y");
            }
            parms.put("cantry", example.getCantry());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map gettryDateNumExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getTrydatenum_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_NULL", "Y");
            } else {
                parms.put("AND_tryDateNum_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_NOT_NULL", "Y");
            } else {
                parms.put("AND_tryDateNum_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_EQUALS", "Y");
            } else {
                parms.put("AND_tryDateNum_EQUALS", "Y");
            }
            parms.put("trydatenum", example.getTrydatenum());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_tryDateNum_NOT_EQUALS", "Y");
            }
            parms.put("trydatenum", example.getTrydatenum());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_GT", "Y");
            } else {
                parms.put("AND_tryDateNum_GT", "Y");
            }
            parms.put("trydatenum", example.getTrydatenum());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_GE", "Y");
            } else {
                parms.put("AND_tryDateNum_GE", "Y");
            }
            parms.put("trydatenum", example.getTrydatenum());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_LT", "Y");
            } else {
                parms.put("AND_tryDateNum_LT", "Y");
            }
            parms.put("trydatenum", example.getTrydatenum());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_tryDateNum_LE", "Y");
            } else {
                parms.put("AND_tryDateNum_LE", "Y");
            }
            parms.put("trydatenum", example.getTrydatenum());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getstatusExampleParms(ProductExample example) {
        Map parms = new HashMap();
        switch (example.getStatus_Indicator()) {
        case ProductExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_NULL", "Y");
            } else {
                parms.put("AND_status_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_NOT_NULL", "Y");
            } else {
                parms.put("AND_status_NOT_NULL", "Y");
            }
            break;
        case ProductExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_EQUALS", "Y");
            } else {
                parms.put("AND_status_EQUALS", "Y");
            }
            parms.put("status", example.getStatus());
            break;
        case ProductExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_status_NOT_EQUALS", "Y");
            }
            parms.put("status", example.getStatus());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_GT", "Y");
            } else {
                parms.put("AND_status_GT", "Y");
            }
            parms.put("status", example.getStatus());
            break;
        case ProductExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_GE", "Y");
            } else {
                parms.put("AND_status_GE", "Y");
            }
            parms.put("status", example.getStatus());
            break;
        case ProductExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_LT", "Y");
            } else {
                parms.put("AND_status_LT", "Y");
            }
            parms.put("status", example.getStatus());
            break;
        case ProductExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_status_LE", "Y");
            } else {
                parms.put("AND_status_LE", "Y");
            }
            parms.put("status", example.getStatus());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table product
     *
     * @abatorgenerated Tue Jul 31 09:18:08 CST 2007
     */
    private Map getExampleParms(ProductExample example) {
        Map parms = new HashMap();
        parms.putAll(getproductIDExampleParms(example));
        parms.putAll(getshopIDExampleParms(example));
        parms.putAll(getproductNameExampleParms(example));
        parms.putAll(getcategoryIDExampleParms(example));
        parms.putAll(getproductCostExampleParms(example));
        parms.putAll(getcanTryExampleParms(example));
        parms.putAll(gettryDateNumExampleParms(example));
        parms.putAll(getstatusExampleParms(example));
        return parms;
    }
}