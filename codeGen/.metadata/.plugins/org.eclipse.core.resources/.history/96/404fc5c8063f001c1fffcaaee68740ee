package netTest.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import netTest.vo.Testinfo;
import netTest.vo.TestinfoExample;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class TestinfoDAOImpl extends SqlMapClientDaoSupport implements TestinfoDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public TestinfoDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public void insert(Testinfo record) {
        getSqlMapClientTemplate().insert("testinfo.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int updateByPrimaryKeyWithoutBLOBs(Testinfo record) {
        int rows = getSqlMapClientTemplate().update("testinfo.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int updateByPrimaryKeyWithBLOBs(Testinfo record) {
        int rows = getSqlMapClientTemplate().update("testinfo.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int updateByPrimaryKeySelective(Testinfo record) {
        int rows = getSqlMapClientTemplate().update("testinfo.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithoutBLOBs(TestinfoExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("testinfo.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithoutBLOBs(TestinfoExample example) {
        return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithBLOBs(TestinfoExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("testinfo.abatorgenerated_selectByExampleWithBLOBs", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithBLOBs(TestinfoExample example) {
        return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public Testinfo selectByPrimaryKey(Long testid) {
        Testinfo key = new Testinfo();
        key.setTestid(testid);
        Testinfo record = (Testinfo) getSqlMapClientTemplate().queryForObject("testinfo.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int deleteByExample(TestinfoExample example) {
        int rows = getSqlMapClientTemplate().delete("testinfo.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int deleteByPrimaryKey(Long testid) {
        Testinfo key = new Testinfo();
        key.setTestid(testid);
        int rows = getSqlMapClientTemplate().delete("testinfo.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestIDExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestid_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_NULL", "Y");
            } else {
                parms.put("AND_testID_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_NOT_NULL", "Y");
            } else {
                parms.put("AND_testID_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_EQUALS", "Y");
            } else {
                parms.put("AND_testID_EQUALS", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testID_NOT_EQUALS", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_GT", "Y");
            } else {
                parms.put("AND_testID_GT", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_GE", "Y");
            } else {
                parms.put("AND_testID_GE", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_LT", "Y");
            } else {
                parms.put("AND_testID_LT", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testID_LE", "Y");
            } else {
                parms.put("AND_testID_LE", "Y");
            }
            parms.put("testid", example.getTestid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getshopIDExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getShopid_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NULL", "Y");
            } else {
                parms.put("AND_shopID_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_NULL", "Y");
            } else {
                parms.put("AND_shopID_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_NOT_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GT", "Y");
            } else {
                parms.put("AND_shopID_GT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GE", "Y");
            } else {
                parms.put("AND_shopID_GE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LT", "Y");
            } else {
                parms.put("AND_shopID_LT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LE", "Y");
            } else {
                parms.put("AND_shopID_LE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestNameExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestname_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_NULL", "Y");
            } else {
                parms.put("AND_testName_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_NOT_NULL", "Y");
            } else {
                parms.put("AND_testName_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_EQUALS", "Y");
            } else {
                parms.put("AND_testName_EQUALS", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testName_NOT_EQUALS", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_GT", "Y");
            } else {
                parms.put("AND_testName_GT", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_GE", "Y");
            } else {
                parms.put("AND_testName_GE", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_LT", "Y");
            } else {
                parms.put("AND_testName_LT", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_LE", "Y");
            } else {
                parms.put("AND_testName_LE", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        case TestinfoExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testName_LIKE", "Y");
            } else {
                parms.put("AND_testName_LIKE", "Y");
            }
            parms.put("testname", example.getTestname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getdeptIDExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getDeptid_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_NULL", "Y");
            } else {
                parms.put("AND_deptID_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_NOT_NULL", "Y");
            } else {
                parms.put("AND_deptID_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_EQUALS", "Y");
            } else {
                parms.put("AND_deptID_EQUALS", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deptID_NOT_EQUALS", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_GT", "Y");
            } else {
                parms.put("AND_deptID_GT", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_GE", "Y");
            } else {
                parms.put("AND_deptID_GE", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_LT", "Y");
            } else {
                parms.put("AND_deptID_LT", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptID_LE", "Y");
            } else {
                parms.put("AND_deptID_LE", "Y");
            }
            parms.put("deptid", example.getDeptid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getdeptNameExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getDeptname_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_NULL", "Y");
            } else {
                parms.put("AND_deptName_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_NOT_NULL", "Y");
            } else {
                parms.put("AND_deptName_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_EQUALS", "Y");
            } else {
                parms.put("AND_deptName_EQUALS", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deptName_NOT_EQUALS", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_GT", "Y");
            } else {
                parms.put("AND_deptName_GT", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_GE", "Y");
            } else {
                parms.put("AND_deptName_GE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_LT", "Y");
            } else {
                parms.put("AND_deptName_LT", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_LE", "Y");
            } else {
                parms.put("AND_deptName_LE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        case TestinfoExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deptName_LIKE", "Y");
            } else {
                parms.put("AND_deptName_LIKE", "Y");
            }
            parms.put("deptname", example.getDeptname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getproductIDExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getProductid_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_NULL", "Y");
            } else {
                parms.put("AND_productID_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_NOT_NULL", "Y");
            } else {
                parms.put("AND_productID_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_EQUALS", "Y");
            } else {
                parms.put("AND_productID_EQUALS", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productID_NOT_EQUALS", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_GT", "Y");
            } else {
                parms.put("AND_productID_GT", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_GE", "Y");
            } else {
                parms.put("AND_productID_GE", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_LT", "Y");
            } else {
                parms.put("AND_productID_LT", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productID_LE", "Y");
            } else {
                parms.put("AND_productID_LE", "Y");
            }
            parms.put("productid", example.getProductid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getproductNameExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getProductname_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_NULL", "Y");
            } else {
                parms.put("AND_productName_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_NOT_NULL", "Y");
            } else {
                parms.put("AND_productName_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_EQUALS", "Y");
            } else {
                parms.put("AND_productName_EQUALS", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_productName_NOT_EQUALS", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_GT", "Y");
            } else {
                parms.put("AND_productName_GT", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_GE", "Y");
            } else {
                parms.put("AND_productName_GE", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_LT", "Y");
            } else {
                parms.put("AND_productName_LT", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_LE", "Y");
            } else {
                parms.put("AND_productName_LE", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        case TestinfoExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_productName_LIKE", "Y");
            } else {
                parms.put("AND_productName_LIKE", "Y");
            }
            parms.put("productname", example.getProductname());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestStartDateExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTeststartdate_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_NULL", "Y");
            } else {
                parms.put("AND_testStartDate_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_NOT_NULL", "Y");
            } else {
                parms.put("AND_testStartDate_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_EQUALS", "Y");
            } else {
                parms.put("AND_testStartDate_EQUALS", "Y");
            }
            parms.put("teststartdate", example.getTeststartdate());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testStartDate_NOT_EQUALS", "Y");
            }
            parms.put("teststartdate", example.getTeststartdate());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_GT", "Y");
            } else {
                parms.put("AND_testStartDate_GT", "Y");
            }
            parms.put("teststartdate", example.getTeststartdate());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_GE", "Y");
            } else {
                parms.put("AND_testStartDate_GE", "Y");
            }
            parms.put("teststartdate", example.getTeststartdate());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_LT", "Y");
            } else {
                parms.put("AND_testStartDate_LT", "Y");
            }
            parms.put("teststartdate", example.getTeststartdate());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStartDate_LE", "Y");
            } else {
                parms.put("AND_testStartDate_LE", "Y");
            }
            parms.put("teststartdate", example.getTeststartdate());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestEndDateExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestenddate_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_NULL", "Y");
            } else {
                parms.put("AND_testEndDate_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_NOT_NULL", "Y");
            } else {
                parms.put("AND_testEndDate_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_EQUALS", "Y");
            } else {
                parms.put("AND_testEndDate_EQUALS", "Y");
            }
            parms.put("testenddate", example.getTestenddate());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testEndDate_NOT_EQUALS", "Y");
            }
            parms.put("testenddate", example.getTestenddate());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_GT", "Y");
            } else {
                parms.put("AND_testEndDate_GT", "Y");
            }
            parms.put("testenddate", example.getTestenddate());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_GE", "Y");
            } else {
                parms.put("AND_testEndDate_GE", "Y");
            }
            parms.put("testenddate", example.getTestenddate());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_LT", "Y");
            } else {
                parms.put("AND_testEndDate_LT", "Y");
            }
            parms.put("testenddate", example.getTestenddate());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testEndDate_LE", "Y");
            } else {
                parms.put("AND_testEndDate_LE", "Y");
            }
            parms.put("testenddate", example.getTestenddate());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestAveScoreExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestavescore_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_NULL", "Y");
            } else {
                parms.put("AND_testAveScore_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_NOT_NULL", "Y");
            } else {
                parms.put("AND_testAveScore_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_EQUALS", "Y");
            } else {
                parms.put("AND_testAveScore_EQUALS", "Y");
            }
            parms.put("testavescore", example.getTestavescore());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testAveScore_NOT_EQUALS", "Y");
            }
            parms.put("testavescore", example.getTestavescore());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_GT", "Y");
            } else {
                parms.put("AND_testAveScore_GT", "Y");
            }
            parms.put("testavescore", example.getTestavescore());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_GE", "Y");
            } else {
                parms.put("AND_testAveScore_GE", "Y");
            }
            parms.put("testavescore", example.getTestavescore());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_LT", "Y");
            } else {
                parms.put("AND_testAveScore_LT", "Y");
            }
            parms.put("testavescore", example.getTestavescore());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAveScore_LE", "Y");
            } else {
                parms.put("AND_testAveScore_LE", "Y");
            }
            parms.put("testavescore", example.getTestavescore());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestQualPerExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestqualper_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_NULL", "Y");
            } else {
                parms.put("AND_testQualPer_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_NOT_NULL", "Y");
            } else {
                parms.put("AND_testQualPer_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_EQUALS", "Y");
            } else {
                parms.put("AND_testQualPer_EQUALS", "Y");
            }
            parms.put("testqualper", example.getTestqualper());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testQualPer_NOT_EQUALS", "Y");
            }
            parms.put("testqualper", example.getTestqualper());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_GT", "Y");
            } else {
                parms.put("AND_testQualPer_GT", "Y");
            }
            parms.put("testqualper", example.getTestqualper());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_GE", "Y");
            } else {
                parms.put("AND_testQualPer_GE", "Y");
            }
            parms.put("testqualper", example.getTestqualper());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_LT", "Y");
            } else {
                parms.put("AND_testQualPer_LT", "Y");
            }
            parms.put("testqualper", example.getTestqualper());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testQualPer_LE", "Y");
            } else {
                parms.put("AND_testQualPer_LE", "Y");
            }
            parms.put("testqualper", example.getTestqualper());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestStatusExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTeststatus_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_NULL", "Y");
            } else {
                parms.put("AND_testStatus_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_NOT_NULL", "Y");
            } else {
                parms.put("AND_testStatus_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_EQUALS", "Y");
            } else {
                parms.put("AND_testStatus_EQUALS", "Y");
            }
            parms.put("teststatus", example.getTeststatus());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testStatus_NOT_EQUALS", "Y");
            }
            parms.put("teststatus", example.getTeststatus());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_GT", "Y");
            } else {
                parms.put("AND_testStatus_GT", "Y");
            }
            parms.put("teststatus", example.getTeststatus());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_GE", "Y");
            } else {
                parms.put("AND_testStatus_GE", "Y");
            }
            parms.put("teststatus", example.getTeststatus());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_LT", "Y");
            } else {
                parms.put("AND_testStatus_LT", "Y");
            }
            parms.put("teststatus", example.getTeststatus());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testStatus_LE", "Y");
            } else {
                parms.put("AND_testStatus_LE", "Y");
            }
            parms.put("teststatus", example.getTeststatus());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestCanStopExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestcanstop_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_NULL", "Y");
            } else {
                parms.put("AND_testCanStop_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_NOT_NULL", "Y");
            } else {
                parms.put("AND_testCanStop_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_EQUALS", "Y");
            } else {
                parms.put("AND_testCanStop_EQUALS", "Y");
            }
            parms.put("testcanstop", example.getTestcanstop());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testCanStop_NOT_EQUALS", "Y");
            }
            parms.put("testcanstop", example.getTestcanstop());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_GT", "Y");
            } else {
                parms.put("AND_testCanStop_GT", "Y");
            }
            parms.put("testcanstop", example.getTestcanstop());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_GE", "Y");
            } else {
                parms.put("AND_testCanStop_GE", "Y");
            }
            parms.put("testcanstop", example.getTestcanstop());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_LT", "Y");
            } else {
                parms.put("AND_testCanStop_LT", "Y");
            }
            parms.put("testcanstop", example.getTestcanstop());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCanStop_LE", "Y");
            } else {
                parms.put("AND_testCanStop_LE", "Y");
            }
            parms.put("testcanstop", example.getTestcanstop());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestIsLeveledExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestisleveled_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_NULL", "Y");
            } else {
                parms.put("AND_testIsLeveled_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_NOT_NULL", "Y");
            } else {
                parms.put("AND_testIsLeveled_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_EQUALS", "Y");
            } else {
                parms.put("AND_testIsLeveled_EQUALS", "Y");
            }
            parms.put("testisleveled", example.getTestisleveled());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testIsLeveled_NOT_EQUALS", "Y");
            }
            parms.put("testisleveled", example.getTestisleveled());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_GT", "Y");
            } else {
                parms.put("AND_testIsLeveled_GT", "Y");
            }
            parms.put("testisleveled", example.getTestisleveled());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_GE", "Y");
            } else {
                parms.put("AND_testIsLeveled_GE", "Y");
            }
            parms.put("testisleveled", example.getTestisleveled());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_LT", "Y");
            } else {
                parms.put("AND_testIsLeveled_LT", "Y");
            }
            parms.put("testisleveled", example.getTestisleveled());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testIsLeveled_LE", "Y");
            } else {
                parms.put("AND_testIsLeveled_LE", "Y");
            }
            parms.put("testisleveled", example.getTestisleveled());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getisDynamicPaperExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getIsdynamicpaper_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_NULL", "Y");
            } else {
                parms.put("AND_isDynamicPaper_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_NOT_NULL", "Y");
            } else {
                parms.put("AND_isDynamicPaper_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_EQUALS", "Y");
            } else {
                parms.put("AND_isDynamicPaper_EQUALS", "Y");
            }
            parms.put("isdynamicpaper", example.getIsdynamicpaper());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_isDynamicPaper_NOT_EQUALS", "Y");
            }
            parms.put("isdynamicpaper", example.getIsdynamicpaper());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_GT", "Y");
            } else {
                parms.put("AND_isDynamicPaper_GT", "Y");
            }
            parms.put("isdynamicpaper", example.getIsdynamicpaper());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_GE", "Y");
            } else {
                parms.put("AND_isDynamicPaper_GE", "Y");
            }
            parms.put("isdynamicpaper", example.getIsdynamicpaper());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_LT", "Y");
            } else {
                parms.put("AND_isDynamicPaper_LT", "Y");
            }
            parms.put("isdynamicpaper", example.getIsdynamicpaper());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_isDynamicPaper_LE", "Y");
            } else {
                parms.put("AND_isDynamicPaper_LE", "Y");
            }
            parms.put("isdynamicpaper", example.getIsdynamicpaper());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestCheckModeExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestcheckmode_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_NULL", "Y");
            } else {
                parms.put("AND_testCheckMode_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_NOT_NULL", "Y");
            } else {
                parms.put("AND_testCheckMode_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_EQUALS", "Y");
            } else {
                parms.put("AND_testCheckMode_EQUALS", "Y");
            }
            parms.put("testcheckmode", example.getTestcheckmode());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testCheckMode_NOT_EQUALS", "Y");
            }
            parms.put("testcheckmode", example.getTestcheckmode());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_GT", "Y");
            } else {
                parms.put("AND_testCheckMode_GT", "Y");
            }
            parms.put("testcheckmode", example.getTestcheckmode());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_GE", "Y");
            } else {
                parms.put("AND_testCheckMode_GE", "Y");
            }
            parms.put("testcheckmode", example.getTestcheckmode());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_LT", "Y");
            } else {
                parms.put("AND_testCheckMode_LT", "Y");
            }
            parms.put("testcheckmode", example.getTestcheckmode());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testCheckMode_LE", "Y");
            } else {
                parms.put("AND_testCheckMode_LE", "Y");
            }
            parms.put("testcheckmode", example.getTestcheckmode());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestTypeExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTesttype_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_NULL", "Y");
            } else {
                parms.put("AND_testType_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_NOT_NULL", "Y");
            } else {
                parms.put("AND_testType_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_EQUALS", "Y");
            } else {
                parms.put("AND_testType_EQUALS", "Y");
            }
            parms.put("testtype", example.getTesttype());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testType_NOT_EQUALS", "Y");
            }
            parms.put("testtype", example.getTesttype());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_GT", "Y");
            } else {
                parms.put("AND_testType_GT", "Y");
            }
            parms.put("testtype", example.getTesttype());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_GE", "Y");
            } else {
                parms.put("AND_testType_GE", "Y");
            }
            parms.put("testtype", example.getTesttype());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_LT", "Y");
            } else {
                parms.put("AND_testType_LT", "Y");
            }
            parms.put("testtype", example.getTesttype());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testType_LE", "Y");
            } else {
                parms.put("AND_testType_LE", "Y");
            }
            parms.put("testtype", example.getTesttype());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestPIDExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestpid_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_NULL", "Y");
            } else {
                parms.put("AND_testPID_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_NOT_NULL", "Y");
            } else {
                parms.put("AND_testPID_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_EQUALS", "Y");
            } else {
                parms.put("AND_testPID_EQUALS", "Y");
            }
            parms.put("testpid", example.getTestpid());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testPID_NOT_EQUALS", "Y");
            }
            parms.put("testpid", example.getTestpid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_GT", "Y");
            } else {
                parms.put("AND_testPID_GT", "Y");
            }
            parms.put("testpid", example.getTestpid());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_GE", "Y");
            } else {
                parms.put("AND_testPID_GE", "Y");
            }
            parms.put("testpid", example.getTestpid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_LT", "Y");
            } else {
                parms.put("AND_testPID_LT", "Y");
            }
            parms.put("testpid", example.getTestpid());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testPID_LE", "Y");
            } else {
                parms.put("AND_testPID_LE", "Y");
            }
            parms.put("testpid", example.getTestpid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map gettestAimExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getTestaim_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_NULL", "Y");
            } else {
                parms.put("AND_testAim_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_NOT_NULL", "Y");
            } else {
                parms.put("AND_testAim_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_EQUALS", "Y");
            } else {
                parms.put("AND_testAim_EQUALS", "Y");
            }
            parms.put("testaim", example.getTestaim());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_testAim_NOT_EQUALS", "Y");
            }
            parms.put("testaim", example.getTestaim());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_GT", "Y");
            } else {
                parms.put("AND_testAim_GT", "Y");
            }
            parms.put("testaim", example.getTestaim());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_GE", "Y");
            } else {
                parms.put("AND_testAim_GE", "Y");
            }
            parms.put("testaim", example.getTestaim());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_LT", "Y");
            } else {
                parms.put("AND_testAim_LT", "Y");
            }
            parms.put("testaim", example.getTestaim());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_testAim_LE", "Y");
            } else {
                parms.put("AND_testAim_LE", "Y");
            }
            parms.put("testaim", example.getTestaim());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getdeleteTimeExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getDeletetime_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_NULL", "Y");
            } else {
                parms.put("AND_deleteTime_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_NOT_NULL", "Y");
            } else {
                parms.put("AND_deleteTime_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_EQUALS", "Y");
            } else {
                parms.put("AND_deleteTime_EQUALS", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_deleteTime_NOT_EQUALS", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_GT", "Y");
            } else {
                parms.put("AND_deleteTime_GT", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_GE", "Y");
            } else {
                parms.put("AND_deleteTime_GE", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_LT", "Y");
            } else {
                parms.put("AND_deleteTime_LT", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_deleteTime_LE", "Y");
            } else {
                parms.put("AND_deleteTime_LE", "Y");
            }
            parms.put("deletetime", example.getDeletetime());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getvisibleExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        switch (example.getVisible_Indicator()) {
        case TestinfoExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_NULL", "Y");
            } else {
                parms.put("AND_visible_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_NOT_NULL", "Y");
            } else {
                parms.put("AND_visible_NOT_NULL", "Y");
            }
            break;
        case TestinfoExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_EQUALS", "Y");
            } else {
                parms.put("AND_visible_EQUALS", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestinfoExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_visible_NOT_EQUALS", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_GT", "Y");
            } else {
                parms.put("AND_visible_GT", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestinfoExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_GE", "Y");
            } else {
                parms.put("AND_visible_GE", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_LT", "Y");
            } else {
                parms.put("AND_visible_LT", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        case TestinfoExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_visible_LE", "Y");
            } else {
                parms.put("AND_visible_LE", "Y");
            }
            parms.put("visible", example.getVisible());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table testinfo
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getExampleParms(TestinfoExample example) {
        Map parms = new HashMap();
        parms.putAll(gettestIDExampleParms(example));
        parms.putAll(getshopIDExampleParms(example));
        parms.putAll(gettestNameExampleParms(example));
        parms.putAll(getdeptIDExampleParms(example));
        parms.putAll(getdeptNameExampleParms(example));
        parms.putAll(getproductIDExampleParms(example));
        parms.putAll(getproductNameExampleParms(example));
        parms.putAll(gettestStartDateExampleParms(example));
        parms.putAll(gettestEndDateExampleParms(example));
        parms.putAll(gettestAveScoreExampleParms(example));
        parms.putAll(gettestQualPerExampleParms(example));
        parms.putAll(gettestStatusExampleParms(example));
        parms.putAll(gettestCanStopExampleParms(example));
        parms.putAll(gettestIsLeveledExampleParms(example));
        parms.putAll(getisDynamicPaperExampleParms(example));
        parms.putAll(gettestCheckModeExampleParms(example));
        parms.putAll(gettestTypeExampleParms(example));
        parms.putAll(gettestPIDExampleParms(example));
        parms.putAll(gettestAimExampleParms(example));
        parms.putAll(getdeleteTimeExampleParms(example));
        parms.putAll(getvisibleExampleParms(example));
        return parms;
    }
}