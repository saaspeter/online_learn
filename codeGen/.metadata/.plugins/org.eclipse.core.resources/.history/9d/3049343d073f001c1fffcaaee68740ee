package platform.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import platform.vo.Functioncharge;
import platform.vo.FunctionchargeExample;

public class FunctionchargeDAOImpl extends SqlMapClientDaoSupport implements FunctionchargeDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public FunctionchargeDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public void insert(Functioncharge record) {
        getSqlMapClientTemplate().insert("functioncharge.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public int updateByPrimaryKeyWithoutBLOBs(Functioncharge record) {
        int rows = getSqlMapClientTemplate().update("functioncharge.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public int updateByPrimaryKeyWithBLOBs(Functioncharge record) {
        int rows = getSqlMapClientTemplate().update("functioncharge.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public int updateByPrimaryKeySelective(Functioncharge record) {
        int rows = getSqlMapClientTemplate().update("functioncharge.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public List selectByExampleWithoutBLOBs(FunctionchargeExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("functioncharge.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public List selectByExampleWithoutBLOBs(FunctionchargeExample example) {
        return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public List selectByExampleWithBLOBs(FunctionchargeExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("functioncharge.abatorgenerated_selectByExampleWithBLOBs", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public List selectByExampleWithBLOBs(FunctionchargeExample example) {
        return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public Functioncharge selectByPrimaryKey(Long functionchargeid) {
        Functioncharge key = new Functioncharge();
        key.setFunctionchargeid(functionchargeid);
        Functioncharge record = (Functioncharge) getSqlMapClientTemplate().queryForObject("functioncharge.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public int deleteByExample(FunctionchargeExample example) {
        int rows = getSqlMapClientTemplate().delete("functioncharge.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    public int deleteByPrimaryKey(Long functionchargeid) {
        Functioncharge key = new Functioncharge();
        key.setFunctionchargeid(functionchargeid);
        int rows = getSqlMapClientTemplate().delete("functioncharge.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    private Map getfunctionChargeIDExampleParms(FunctionchargeExample example) {
        Map parms = new HashMap();
        switch (example.getFunctionchargeid_Indicator()) {
        case FunctionchargeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_NULL", "Y");
            } else {
                parms.put("AND_functionChargeID_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_NOT_NULL", "Y");
            } else {
                parms.put("AND_functionChargeID_NOT_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_EQUALS", "Y");
            } else {
                parms.put("AND_functionChargeID_EQUALS", "Y");
            }
            parms.put("functionchargeid", example.getFunctionchargeid());
            break;
        case FunctionchargeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_functionChargeID_NOT_EQUALS", "Y");
            }
            parms.put("functionchargeid", example.getFunctionchargeid());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_GT", "Y");
            } else {
                parms.put("AND_functionChargeID_GT", "Y");
            }
            parms.put("functionchargeid", example.getFunctionchargeid());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_GE", "Y");
            } else {
                parms.put("AND_functionChargeID_GE", "Y");
            }
            parms.put("functionchargeid", example.getFunctionchargeid());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_LT", "Y");
            } else {
                parms.put("AND_functionChargeID_LT", "Y");
            }
            parms.put("functionchargeid", example.getFunctionchargeid());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_functionChargeID_LE", "Y");
            } else {
                parms.put("AND_functionChargeID_LE", "Y");
            }
            parms.put("functionchargeid", example.getFunctionchargeid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    private Map gethasDeptLevelExampleParms(FunctionchargeExample example) {
        Map parms = new HashMap();
        switch (example.getHasdeptlevel_Indicator()) {
        case FunctionchargeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_NULL", "Y");
            } else {
                parms.put("AND_hasDeptLevel_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_NOT_NULL", "Y");
            } else {
                parms.put("AND_hasDeptLevel_NOT_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_EQUALS", "Y");
            } else {
                parms.put("AND_hasDeptLevel_EQUALS", "Y");
            }
            parms.put("hasdeptlevel", example.getHasdeptlevel());
            break;
        case FunctionchargeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_hasDeptLevel_NOT_EQUALS", "Y");
            }
            parms.put("hasdeptlevel", example.getHasdeptlevel());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_GT", "Y");
            } else {
                parms.put("AND_hasDeptLevel_GT", "Y");
            }
            parms.put("hasdeptlevel", example.getHasdeptlevel());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_GE", "Y");
            } else {
                parms.put("AND_hasDeptLevel_GE", "Y");
            }
            parms.put("hasdeptlevel", example.getHasdeptlevel());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_LT", "Y");
            } else {
                parms.put("AND_hasDeptLevel_LT", "Y");
            }
            parms.put("hasdeptlevel", example.getHasdeptlevel());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasDeptLevel_LE", "Y");
            } else {
                parms.put("AND_hasDeptLevel_LE", "Y");
            }
            parms.put("hasdeptlevel", example.getHasdeptlevel());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    private Map gethasProductLevelExampleParms(FunctionchargeExample example) {
        Map parms = new HashMap();
        switch (example.getHasproductlevel_Indicator()) {
        case FunctionchargeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_NULL", "Y");
            } else {
                parms.put("AND_hasProductLevel_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_NOT_NULL", "Y");
            } else {
                parms.put("AND_hasProductLevel_NOT_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_EQUALS", "Y");
            } else {
                parms.put("AND_hasProductLevel_EQUALS", "Y");
            }
            parms.put("hasproductlevel", example.getHasproductlevel());
            break;
        case FunctionchargeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_hasProductLevel_NOT_EQUALS", "Y");
            }
            parms.put("hasproductlevel", example.getHasproductlevel());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_GT", "Y");
            } else {
                parms.put("AND_hasProductLevel_GT", "Y");
            }
            parms.put("hasproductlevel", example.getHasproductlevel());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_GE", "Y");
            } else {
                parms.put("AND_hasProductLevel_GE", "Y");
            }
            parms.put("hasproductlevel", example.getHasproductlevel());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_LT", "Y");
            } else {
                parms.put("AND_hasProductLevel_LT", "Y");
            }
            parms.put("hasproductlevel", example.getHasproductlevel());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasProductLevel_LE", "Y");
            } else {
                parms.put("AND_hasProductLevel_LE", "Y");
            }
            parms.put("hasproductlevel", example.getHasproductlevel());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    private Map gethasBackupExampleParms(FunctionchargeExample example) {
        Map parms = new HashMap();
        switch (example.getHasbackup_Indicator()) {
        case FunctionchargeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_NULL", "Y");
            } else {
                parms.put("AND_hasBackup_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_NOT_NULL", "Y");
            } else {
                parms.put("AND_hasBackup_NOT_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_EQUALS", "Y");
            } else {
                parms.put("AND_hasBackup_EQUALS", "Y");
            }
            parms.put("hasbackup", example.getHasbackup());
            break;
        case FunctionchargeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_hasBackup_NOT_EQUALS", "Y");
            }
            parms.put("hasbackup", example.getHasbackup());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_GT", "Y");
            } else {
                parms.put("AND_hasBackup_GT", "Y");
            }
            parms.put("hasbackup", example.getHasbackup());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_GE", "Y");
            } else {
                parms.put("AND_hasBackup_GE", "Y");
            }
            parms.put("hasbackup", example.getHasbackup());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_LT", "Y");
            } else {
                parms.put("AND_hasBackup_LT", "Y");
            }
            parms.put("hasbackup", example.getHasbackup());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_hasBackup_LE", "Y");
            } else {
                parms.put("AND_hasBackup_LE", "Y");
            }
            parms.put("hasbackup", example.getHasbackup());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    private Map getchargeCostExampleParms(FunctionchargeExample example) {
        Map parms = new HashMap();
        switch (example.getChargecost_Indicator()) {
        case FunctionchargeExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_NULL", "Y");
            } else {
                parms.put("AND_chargeCost_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_NOT_NULL", "Y");
            } else {
                parms.put("AND_chargeCost_NOT_NULL", "Y");
            }
            break;
        case FunctionchargeExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_EQUALS", "Y");
            } else {
                parms.put("AND_chargeCost_EQUALS", "Y");
            }
            parms.put("chargecost", example.getChargecost());
            break;
        case FunctionchargeExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_chargeCost_NOT_EQUALS", "Y");
            }
            parms.put("chargecost", example.getChargecost());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_GT", "Y");
            } else {
                parms.put("AND_chargeCost_GT", "Y");
            }
            parms.put("chargecost", example.getChargecost());
            break;
        case FunctionchargeExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_GE", "Y");
            } else {
                parms.put("AND_chargeCost_GE", "Y");
            }
            parms.put("chargecost", example.getChargecost());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_LT", "Y");
            } else {
                parms.put("AND_chargeCost_LT", "Y");
            }
            parms.put("chargecost", example.getChargecost());
            break;
        case FunctionchargeExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_chargeCost_LE", "Y");
            } else {
                parms.put("AND_chargeCost_LE", "Y");
            }
            parms.put("chargecost", example.getChargecost());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table functioncharge
     *
     * @abatorgenerated Tue Jul 31 09:41:51 CST 2007
     */
    private Map getExampleParms(FunctionchargeExample example) {
        Map parms = new HashMap();
        parms.putAll(getfunctionChargeIDExampleParms(example));
        parms.putAll(gethasDeptLevelExampleParms(example));
        parms.putAll(gethasProductLevelExampleParms(example));
        parms.putAll(gethasBackupExampleParms(example));
        parms.putAll(getchargeCostExampleParms(example));
        return parms;
    }
}