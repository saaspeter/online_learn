package netTest.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import netTest.vo.Questionitem;
import netTest.vo.QuestionitemExample;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class QuestionitemDAOImpl extends SqlMapClientDaoSupport implements QuestionitemDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public QuestionitemDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public void insert(Questionitem record) {
        getSqlMapClientTemplate().insert("questionitem.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int updateByPrimaryKeyWithoutBLOBs(Questionitem record) {
        int rows = getSqlMapClientTemplate().update("questionitem.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int updateByPrimaryKeyWithBLOBs(Questionitem record) {
        int rows = getSqlMapClientTemplate().update("questionitem.abatorgenerated_updateByPrimaryKeyWithBLOBs", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int updateByPrimaryKeySelective(Questionitem record) {
        int rows = getSqlMapClientTemplate().update("questionitem.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithoutBLOBs(QuestionitemExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("questionitem.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithoutBLOBs(QuestionitemExample example) {
        return selectByExampleWithoutBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithBLOBs(QuestionitemExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("questionitem.abatorgenerated_selectByExampleWithBLOBs", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public List selectByExampleWithBLOBs(QuestionitemExample example) {
        return selectByExampleWithBLOBs(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public Questionitem selectByPrimaryKey(Long quesitemid) {
        Questionitem key = new Questionitem();
        key.setQuesitemid(quesitemid);
        Questionitem record = (Questionitem) getSqlMapClientTemplate().queryForObject("questionitem.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int deleteByExample(QuestionitemExample example) {
        int rows = getSqlMapClientTemplate().delete("questionitem.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    public int deleteByPrimaryKey(Long quesitemid) {
        Questionitem key = new Questionitem();
        key.setQuesitemid(quesitemid);
        int rows = getSqlMapClientTemplate().delete("questionitem.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getquesItemIDExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        switch (example.getQuesitemid_Indicator()) {
        case QuestionitemExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_NULL", "Y");
            } else {
                parms.put("AND_quesItemID_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_NOT_NULL", "Y");
            } else {
                parms.put("AND_quesItemID_NOT_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_EQUALS", "Y");
            } else {
                parms.put("AND_quesItemID_EQUALS", "Y");
            }
            parms.put("quesitemid", example.getQuesitemid());
            break;
        case QuestionitemExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_quesItemID_NOT_EQUALS", "Y");
            }
            parms.put("quesitemid", example.getQuesitemid());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_GT", "Y");
            } else {
                parms.put("AND_quesItemID_GT", "Y");
            }
            parms.put("quesitemid", example.getQuesitemid());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_GE", "Y");
            } else {
                parms.put("AND_quesItemID_GE", "Y");
            }
            parms.put("quesitemid", example.getQuesitemid());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_LT", "Y");
            } else {
                parms.put("AND_quesItemID_LT", "Y");
            }
            parms.put("quesitemid", example.getQuesitemid());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemID_LE", "Y");
            } else {
                parms.put("AND_quesItemID_LE", "Y");
            }
            parms.put("quesitemid", example.getQuesitemid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getquesIDExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        switch (example.getQuesid_Indicator()) {
        case QuestionitemExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_NULL", "Y");
            } else {
                parms.put("AND_quesID_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_NOT_NULL", "Y");
            } else {
                parms.put("AND_quesID_NOT_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_EQUALS", "Y");
            } else {
                parms.put("AND_quesID_EQUALS", "Y");
            }
            parms.put("quesid", example.getQuesid());
            break;
        case QuestionitemExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_quesID_NOT_EQUALS", "Y");
            }
            parms.put("quesid", example.getQuesid());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_GT", "Y");
            } else {
                parms.put("AND_quesID_GT", "Y");
            }
            parms.put("quesid", example.getQuesid());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_GE", "Y");
            } else {
                parms.put("AND_quesID_GE", "Y");
            }
            parms.put("quesid", example.getQuesid());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_LT", "Y");
            } else {
                parms.put("AND_quesID_LT", "Y");
            }
            parms.put("quesid", example.getQuesid());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesID_LE", "Y");
            } else {
                parms.put("AND_quesID_LE", "Y");
            }
            parms.put("quesid", example.getQuesid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getshopIDExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        switch (example.getShopid_Indicator()) {
        case QuestionitemExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NULL", "Y");
            } else {
                parms.put("AND_shopID_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_NULL", "Y");
            } else {
                parms.put("AND_shopID_NOT_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case QuestionitemExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_shopID_NOT_EQUALS", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GT", "Y");
            } else {
                parms.put("AND_shopID_GT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_GE", "Y");
            } else {
                parms.put("AND_shopID_GE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LT", "Y");
            } else {
                parms.put("AND_shopID_LT", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_shopID_LE", "Y");
            } else {
                parms.put("AND_shopID_LE", "Y");
            }
            parms.put("shopid", example.getShopid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getquesItemFlagExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        switch (example.getQuesitemflag_Indicator()) {
        case QuestionitemExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_NULL", "Y");
            } else {
                parms.put("AND_quesItemFlag_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_NOT_NULL", "Y");
            } else {
                parms.put("AND_quesItemFlag_NOT_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_EQUALS", "Y");
            } else {
                parms.put("AND_quesItemFlag_EQUALS", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        case QuestionitemExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_quesItemFlag_NOT_EQUALS", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_GT", "Y");
            } else {
                parms.put("AND_quesItemFlag_GT", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_GE", "Y");
            } else {
                parms.put("AND_quesItemFlag_GE", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_LT", "Y");
            } else {
                parms.put("AND_quesItemFlag_LT", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_LE", "Y");
            } else {
                parms.put("AND_quesItemFlag_LE", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        case QuestionitemExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_quesItemFlag_LIKE", "Y");
            } else {
                parms.put("AND_quesItemFlag_LIKE", "Y");
            }
            parms.put("quesitemflag", example.getQuesitemflag());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getfileExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        switch (example.getFile_Indicator()) {
        case QuestionitemExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_NULL", "Y");
            } else {
                parms.put("AND_file_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_NOT_NULL", "Y");
            } else {
                parms.put("AND_file_NOT_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_EQUALS", "Y");
            } else {
                parms.put("AND_file_EQUALS", "Y");
            }
            parms.put("file", example.getFile());
            break;
        case QuestionitemExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_file_NOT_EQUALS", "Y");
            }
            parms.put("file", example.getFile());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_GT", "Y");
            } else {
                parms.put("AND_file_GT", "Y");
            }
            parms.put("file", example.getFile());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_GE", "Y");
            } else {
                parms.put("AND_file_GE", "Y");
            }
            parms.put("file", example.getFile());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_LT", "Y");
            } else {
                parms.put("AND_file_LT", "Y");
            }
            parms.put("file", example.getFile());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_LE", "Y");
            } else {
                parms.put("AND_file_LE", "Y");
            }
            parms.put("file", example.getFile());
            break;
        case QuestionitemExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_file_LIKE", "Y");
            } else {
                parms.put("AND_file_LIKE", "Y");
            }
            parms.put("file", example.getFile());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getfileTypeExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        switch (example.getFiletype_Indicator()) {
        case QuestionitemExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_NULL", "Y");
            } else {
                parms.put("AND_fileType_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_NOT_NULL", "Y");
            } else {
                parms.put("AND_fileType_NOT_NULL", "Y");
            }
            break;
        case QuestionitemExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_EQUALS", "Y");
            } else {
                parms.put("AND_fileType_EQUALS", "Y");
            }
            parms.put("filetype", example.getFiletype());
            break;
        case QuestionitemExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_fileType_NOT_EQUALS", "Y");
            }
            parms.put("filetype", example.getFiletype());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_GT", "Y");
            } else {
                parms.put("AND_fileType_GT", "Y");
            }
            parms.put("filetype", example.getFiletype());
            break;
        case QuestionitemExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_GE", "Y");
            } else {
                parms.put("AND_fileType_GE", "Y");
            }
            parms.put("filetype", example.getFiletype());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_LT", "Y");
            } else {
                parms.put("AND_fileType_LT", "Y");
            }
            parms.put("filetype", example.getFiletype());
            break;
        case QuestionitemExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_fileType_LE", "Y");
            } else {
                parms.put("AND_fileType_LE", "Y");
            }
            parms.put("filetype", example.getFiletype());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table questionitem
     *
     * @abatorgenerated Tue Jul 31 09:18:14 CST 2007
     */
    private Map getExampleParms(QuestionitemExample example) {
        Map parms = new HashMap();
        parms.putAll(getquesItemIDExampleParms(example));
        parms.putAll(getquesIDExampleParms(example));
        parms.putAll(getshopIDExampleParms(example));
        parms.putAll(getquesItemFlagExampleParms(example));
        parms.putAll(getfileExampleParms(example));
        parms.putAll(getfileTypeExampleParms(example));
        return parms;
    }
}