package platform.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;
import platform.vo.Rechargerecord;
import platform.vo.RechargerecordExample;

public class RechargerecordDAOImpl extends SqlMapClientDaoSupport implements RechargerecordDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public RechargerecordDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public void insert(Rechargerecord record) {
        getSqlMapClientTemplate().insert("rechargerecord.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public int updateByPrimaryKey(Rechargerecord record) {
        int rows = getSqlMapClientTemplate().update("rechargerecord.abatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public int updateByPrimaryKeySelective(Rechargerecord record) {
        int rows = getSqlMapClientTemplate().update("rechargerecord.abatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public List selectByExample(RechargerecordExample example, String orderByClause) {
        Map parms = getExampleParms(example);
        if (orderByClause != null) {
            parms.put("ABATOR_ORDER_BY_CLAUSE", orderByClause);
        }
        List list = getSqlMapClientTemplate().queryForList("rechargerecord.abatorgenerated_selectByExample", parms);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public List selectByExample(RechargerecordExample example) {
        return selectByExample(example, null);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public Rechargerecord selectByPrimaryKey(Long rechargeid) {
        Rechargerecord key = new Rechargerecord();
        key.setRechargeid(rechargeid);
        Rechargerecord record = (Rechargerecord) getSqlMapClientTemplate().queryForObject("rechargerecord.abatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public int deleteByExample(RechargerecordExample example) {
        int rows = getSqlMapClientTemplate().delete("rechargerecord.abatorgenerated_deleteByExample", getExampleParms(example));
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    public int deleteByPrimaryKey(Long rechargeid) {
        Rechargerecord key = new Rechargerecord();
        key.setRechargeid(rechargeid);
        int rows = getSqlMapClientTemplate().delete("rechargerecord.abatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map getrechargeIDExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.getRechargeid_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_NULL", "Y");
            } else {
                parms.put("AND_rechargeID_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_NOT_NULL", "Y");
            } else {
                parms.put("AND_rechargeID_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_EQUALS", "Y");
            } else {
                parms.put("AND_rechargeID_EQUALS", "Y");
            }
            parms.put("rechargeid", example.getRechargeid());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_rechargeID_NOT_EQUALS", "Y");
            }
            parms.put("rechargeid", example.getRechargeid());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_GT", "Y");
            } else {
                parms.put("AND_rechargeID_GT", "Y");
            }
            parms.put("rechargeid", example.getRechargeid());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_GE", "Y");
            } else {
                parms.put("AND_rechargeID_GE", "Y");
            }
            parms.put("rechargeid", example.getRechargeid());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_LT", "Y");
            } else {
                parms.put("AND_rechargeID_LT", "Y");
            }
            parms.put("rechargeid", example.getRechargeid());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_rechargeID_LE", "Y");
            } else {
                parms.put("AND_rechargeID_LE", "Y");
            }
            parms.put("rechargeid", example.getRechargeid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map getuserIDExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.getUserid_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NULL", "Y");
            } else {
                parms.put("AND_userID_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NOT_NULL", "Y");
            } else {
                parms.put("AND_userID_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_EQUALS", "Y");
            } else {
                parms.put("AND_userID_EQUALS", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_userID_NOT_EQUALS", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_GT", "Y");
            } else {
                parms.put("AND_userID_GT", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_GE", "Y");
            } else {
                parms.put("AND_userID_GE", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_LT", "Y");
            } else {
                parms.put("AND_userID_LT", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_userID_LE", "Y");
            } else {
                parms.put("AND_userID_LE", "Y");
            }
            parms.put("userid", example.getUserid());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map get≥‰÷µ ±º‰ExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.get≥‰÷µ ±º‰_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_NULL", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_NOT_NULL", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_EQUALS", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_EQUALS", "Y");
            }
            parms.put("≥‰÷µ ±º‰", example.get≥‰÷µ ±º‰());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_NOT_EQUALS", "Y");
            }
            parms.put("≥‰÷µ ±º‰", example.get≥‰÷µ ±º‰());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_GT", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_GT", "Y");
            }
            parms.put("≥‰÷µ ±º‰", example.get≥‰÷µ ±º‰());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_GE", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_GE", "Y");
            }
            parms.put("≥‰÷µ ±º‰", example.get≥‰÷µ ±º‰());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_LT", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_LT", "Y");
            }
            parms.put("≥‰÷µ ±º‰", example.get≥‰÷µ ±º‰());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µ ±º‰_LE", "Y");
            } else {
                parms.put("AND_≥‰÷µ ±º‰_LE", "Y");
            }
            parms.put("≥‰÷µ ±º‰", example.get≥‰÷µ ±º‰());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map get≥‰÷µΩ∂ÓExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.get≥‰÷µΩ∂Ó_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_NULL", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_NOT_NULL", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_EQUALS", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_EQUALS", "Y");
            }
            parms.put("≥‰÷µΩ∂Ó", example.get≥‰÷µΩ∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_NOT_EQUALS", "Y");
            }
            parms.put("≥‰÷µΩ∂Ó", example.get≥‰÷µΩ∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_GT", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_GT", "Y");
            }
            parms.put("≥‰÷µΩ∂Ó", example.get≥‰÷µΩ∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_GE", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_GE", "Y");
            }
            parms.put("≥‰÷µΩ∂Ó", example.get≥‰÷µΩ∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_LT", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_LT", "Y");
            }
            parms.put("≥‰÷µΩ∂Ó", example.get≥‰÷µΩ∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µΩ∂Ó_LE", "Y");
            } else {
                parms.put("AND_≥‰÷µΩ∂Ó_LE", "Y");
            }
            parms.put("≥‰÷µΩ∂Ó", example.get≥‰÷µΩ∂Ó());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map get±“÷÷ExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.get±“÷÷_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_NULL", "Y");
            } else {
                parms.put("AND_±“÷÷_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_NOT_NULL", "Y");
            } else {
                parms.put("AND_±“÷÷_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_EQUALS", "Y");
            } else {
                parms.put("AND_±“÷÷_EQUALS", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_±“÷÷_NOT_EQUALS", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_GT", "Y");
            } else {
                parms.put("AND_±“÷÷_GT", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_GE", "Y");
            } else {
                parms.put("AND_±“÷÷_GE", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_LT", "Y");
            } else {
                parms.put("AND_±“÷÷_LT", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_LE", "Y");
            } else {
                parms.put("AND_±“÷÷_LE", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        case RechargerecordExample.EXAMPLE_LIKE:
            if (example.isCombineTypeOr()) {
                parms.put("OR_±“÷÷_LIKE", "Y");
            } else {
                parms.put("AND_±“÷÷_LIKE", "Y");
            }
            parms.put("±“÷÷", example.get±“÷÷());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map get≥‰÷µµ„ ˝ExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.get≥‰÷µµ„ ˝_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_NULL", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_NOT_NULL", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_EQUALS", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_EQUALS", "Y");
            }
            parms.put("≥‰÷µµ„ ˝", example.get≥‰÷µµ„ ˝());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_NOT_EQUALS", "Y");
            }
            parms.put("≥‰÷µµ„ ˝", example.get≥‰÷µµ„ ˝());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_GT", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_GT", "Y");
            }
            parms.put("≥‰÷µµ„ ˝", example.get≥‰÷µµ„ ˝());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_GE", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_GE", "Y");
            }
            parms.put("≥‰÷µµ„ ˝", example.get≥‰÷µµ„ ˝());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_LT", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_LT", "Y");
            }
            parms.put("≥‰÷µµ„ ˝", example.get≥‰÷µµ„ ˝());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_≥‰÷µµ„ ˝_LE", "Y");
            } else {
                parms.put("AND_≥‰÷µµ„ ˝_LE", "Y");
            }
            parms.put("≥‰÷µµ„ ˝", example.get≥‰÷µµ„ ˝());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map get”‡∂ÓExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        switch (example.get”‡∂Ó_Indicator()) {
        case RechargerecordExample.EXAMPLE_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_NULL", "Y");
            } else {
                parms.put("AND_”‡∂Ó_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_NOT_NULL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_NOT_NULL", "Y");
            } else {
                parms.put("AND_”‡∂Ó_NOT_NULL", "Y");
            }
            break;
        case RechargerecordExample.EXAMPLE_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_EQUALS", "Y");
            } else {
                parms.put("AND_”‡∂Ó_EQUALS", "Y");
            }
            parms.put("”‡∂Ó", example.get”‡∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_NOT_EQUALS:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_NOT_EQUALS", "Y");
            } else {
                parms.put("AND_”‡∂Ó_NOT_EQUALS", "Y");
            }
            parms.put("”‡∂Ó", example.get”‡∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_GT", "Y");
            } else {
                parms.put("AND_”‡∂Ó_GT", "Y");
            }
            parms.put("”‡∂Ó", example.get”‡∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_GREATER_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_GE", "Y");
            } else {
                parms.put("AND_”‡∂Ó_GE", "Y");
            }
            parms.put("”‡∂Ó", example.get”‡∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_LT", "Y");
            } else {
                parms.put("AND_”‡∂Ó_LT", "Y");
            }
            parms.put("”‡∂Ó", example.get”‡∂Ó());
            break;
        case RechargerecordExample.EXAMPLE_LESS_THAN_OR_EQUAL:
            if (example.isCombineTypeOr()) {
                parms.put("OR_”‡∂Ó_LE", "Y");
            } else {
                parms.put("AND_”‡∂Ó_LE", "Y");
            }
            parms.put("”‡∂Ó", example.get”‡∂Ó());
            break;
        }
        return parms;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table rechargerecord
     *
     * @abatorgenerated Tue Jul 31 09:40:29 CST 2007
     */
    private Map getExampleParms(RechargerecordExample example) {
        Map parms = new HashMap();
        parms.putAll(getrechargeIDExampleParms(example));
        parms.putAll(getuserIDExampleParms(example));
        parms.putAll(get≥‰÷µ ±º‰ExampleParms(example));
        parms.putAll(get≥‰÷µΩ∂ÓExampleParms(example));
        parms.putAll(get±“÷÷ExampleParms(example));
        parms.putAll(get≥‰÷µµ„ ˝ExampleParms(example));
        parms.putAll(get”‡∂ÓExampleParms(example));
        return parms;
    }
}