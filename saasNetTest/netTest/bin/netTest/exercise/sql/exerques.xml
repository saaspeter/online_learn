<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Exerques">
<!-- ###################### ExerquesResult ########################## -->
  <resultMap id="ExerquesResult" class="netTest.exercise.vo.Exerques">
    <result column="exerquesID" property="exerquesid" jdbcType="BIGINT"/>
    <result column="exerID" property="exerid" jdbcType="BIGINT"/>
    <result column="quesID" property="quesid" jdbcType="BIGINT"/>
    <result column="quesType" property="questype" jdbcType="INTEGER"/>
    <result column="shopID" property="shopid" jdbcType="BIGINT"/>
    <result column="quesOrder" property="quesorder" jdbcType="INTEGER"/>
    <result column="quesScore" property="quesscore" jdbcType="REAL"/>
  </resultMap>
  
  <resultMap id="ExerquesResult_Ex" class="netTest.exercise.vo.Exerques" extends="Exerques.ExerquesResult">
    <result column="quesTypeID" property="questypeid" jdbcType="BIGINT"/>
    <result column="quesType" property="questype" jdbcType="INTEGER"/>
    <result column="quesOptNum" property="quesoptnum" jdbcType="INTEGER"/>
    <result column="quesCreateTime" property="quescreatetime" jdbcType="TIMESTAMP"/>
    <result column="quesCheckType" property="queschecktype" jdbcType="SMALLINT"/>
    <result column="productBaseID" property="productbaseid" jdbcType="BIGINT"/>
    <result column="contentCateID" property="contentcateid" jdbcType="BIGINT"/>
    <result column="difficultID" property="difficultid" jdbcType="INTEGER"/>
    <result column="fileUrl" property="fileurl" jdbcType="VARCHAR"/>
    <result column="fileType" property="filetype" jdbcType="SMALLINT"/>
    <result column="answerSim" property="answersim" jdbcType="VARCHAR"/>
    <result column="compType" property="comptype" jdbcType="SMALLINT"/>
    <result column="pID" property="pid" jdbcType="BIGINT"/>
    <result column="wareID" property="wareid" jdbcType="BIGINT"/>
    <result column="question" property="question" jdbcType="VARCHAR"/>
  </resultMap>
    
<!-- ###################### where_Clause ########################## -->
  <sql id="where_Clause"> 
    <dynamic prepend="where"> 
      <isNotNull prepend="and" property="exerquesid"><![CDATA[ exerquesID=#exerquesid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="exerid"><![CDATA[ exerID=#exerid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="quesid"><![CDATA[ quesID=#quesid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="questype"><![CDATA[ quesType=#questype:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="and" property="shopid"><![CDATA[ shopID=#shopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="quesorder"><![CDATA[ quesOrder=#quesorder:INTEGER# ]]></isNotNull>
      <isNotNull prepend="and" property="quesscore"><![CDATA[ quesScore=#quesscore:REAL# ]]></isNotNull>
    </dynamic>
  </sql>
    
<!-- ###################### selectByPK ########################## -->
  <select id="selectByPK" resultMap="ExerquesResult" parameterClass="java.lang.Long"> 
     select  exerquesID, quesID, exerID, quesType, shopID, quesOrder, quesScore
     from exerques 
     where exerquesID=#value# 
  </select>
   
<!-- ###################### selectByVO ########################## -->
  <select id="selectByVO" resultMap="ExerquesResult" parameterClass="netTest.exercise.dto.ExerquesQuery"> 
     select  exerquesID, quesID, exerID, quesType, shopID, quesOrder, quesScore
     from exerques
    <include refid="Exerques.where_Clause"/>  
    <isNotEmpty property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotEmpty> 
  </select>
  
  <!-- ###################### delExerByQues ########################## -->
  <delete id="delExerByQues" parameterClass="java.lang.String"> 
     delete from exerques where quesID in ($quesIdStr$)
  </delete>
  
    <!-- ###################### delExerByWare ########################## -->
  <delete id="delExerByWare" parameterClass="java.lang.Long"> 
     delete  from exerques where  exists  
              (select 1 from Question where Question.wareID=#value# and Question.quesID=exerques.quesID)
  </delete>
  
    <!-- ###################### qryQuesByPatt ########################## -->
  <select id="qryQuesByPatt" resultMap="ExerquesResult_Ex" parameterClass="netTest.exercise.dto.ExerquesQuery"> 
     select a.exerquesID,a.exerID,a.quesID,a.quesOrder,a.quesScore,a.shopID,b.quesTypeID,b.quesType,
           b.quesOptNum,b.quesCreateTime,b.quesCheckType,b.productBaseID,b.contentCateID,b.difficultID,
           b.fileUrl,b.fileType,b.answerSim,b.compType,b.pID,b.wareID,b.status, b.question  
     from ExerQues a, Question b
     where a.quesID=b.quesID and a.exerID=#exerid:BIGINT# 
           and b.quesType=#questype:INTEGER# and b.compType in(0,1) 
  </select>
  
<!-- ###################### insert ########################## -->
  <insert id="insert" parameterClass="netTest.exercise.vo.Exerques"> 
     insert into exerques
     ( exerquesID, quesID, exerID, quesType, 
    shopID,
    quesOrder,
    quesScore ) 
    values 
     ( #exerquesid:BIGINT#,#quesid:BIGINT#,#exerid:BIGINT#, #questype:INTEGER#,
    #shopid:BIGINT#, 
    #quesorder:INTEGER#, 
    #quesscore:REAL# )
	 <selectKey resultClass="java.lang.Long" keyProperty="exerid" >  
        SELECT   LAST_INSERT_ID()  
     </selectKey> 
  </insert>
  
<!-- ###################### updateByPK ########################## -->
  <update id="updateByPK" parameterClass="netTest.exercise.vo.Exerques"> 
     update exerques
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="quesorder"><![CDATA[ quesOrder=#quesorder:INTEGER# ]]></isNotNull>
      <isNotNull prepend="," property="quesscore"><![CDATA[ quesScore=#quesscore:REAL# ]]></isNotNull>
    </dynamic> where exerquesID=#exerquesid:BIGINT#
  </update>
  
<!-- ###################### deleteByPK ########################## -->
  <delete id="deleteByPK" parameterClass="java.lang.Long"> 
     delete from exerques where exerquesID = #value#
  </delete>
  
  <!-- ###################### deleteByExer ########################## -->
  <delete id="deleteByExer" parameterClass="java.lang.Long"> 
     delete from exerques where exerID = #exerid:BIGINT#
  </delete>
  
  <!-- ###################### deleteByQuesId ########################## -->
  <delete id="deleteByQuesId" parameterClass="java.lang.Long"> 
     delete from exerques where quesID = #quesid:BIGINT#
  </delete>
  
<!-- ###################### selectByVOCount ########################## -->
  <select id="selectByVOCount" resultClass="java.lang.Integer" parameterClass="netTest.exercise.dto.ExerquesQuery"> 
     select count(*) from exerques
     <include refid="Exerques.where_Clause"/>  
  </select>
    
</sqlMap>
