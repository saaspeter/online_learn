<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Exeruser">
<!-- ###################### ExeruserResult ########################## -->
  <resultMap id="ExeruserResult" class="netTest.exercise.vo.Exeruser">
    <result column="exerUserID" property="exeruserid" jdbcType="BIGINT"/>
    <result column="shopID" property="shopid" jdbcType="BIGINT"/>
    <result column="exerID" property="exerid" jdbcType="BIGINT"/>
    <result column="exerVersion" property="exerversion" jdbcType="INTEGER"/>
    <result column="userID" property="userid" jdbcType="BIGINT"/>
    <result column="orgBaseID" property="orgbaseid" jdbcType="BIGINT"/>
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP"/>
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP"/>
    <result column="objectScore" property="objectscore" jdbcType="REAL"/>
    <result column="totalScore" property="totalscore" jdbcType="REAL"/>
    <result column="status" property="status" jdbcType="SMALLINT"/>
    <result column="orderNo" property="orderno" jdbcType="INTEGER"/>
    <result column="examTimes" property="examtimes" jdbcType="INTEGER"/>

  </resultMap>

  <!-- ###################### ExeruserResultEx ########################## -->
  <resultMap id="ExeruserResultEx" class="netTest.exercise.vo.Exeruser" >    
    <result column="exerID" property="exerid" jdbcType="BIGINT"/>
    <result column="exerName" property="exername" jdbcType="VARCHAR"/>
    <result column="shopID" property="shopid" jdbcType="BIGINT"/>
    <result column="contentCateID" property="contentcateid" jdbcType="BIGINT"/>
    <result column="productBaseID" property="productbaseid" jdbcType="BIGINT"/>
    <result column="exerUserID" property="exeruserid" jdbcType="BIGINT"/>
    <result column="userID" property="userid" jdbcType="BIGINT"/>
    <result column="orgBaseID" property="orgbaseid" jdbcType="BIGINT"/>
    <result column="startTime" property="starttime" jdbcType="TIMESTAMP"/>
    <result column="endTime" property="endtime" jdbcType="TIMESTAMP"/>
    <result column="status" property="status" jdbcType="SMALLINT"/>
    <result column="examTimes" property="examtimes" jdbcType="INTEGER"/>
    
  </resultMap>
    
  <!-- ###################### where_Clause1 ########################## -->
  <sql id="where_Clause1"> 
    <dynamic prepend="where"> 
      <isNotNull prepend="and" property="exerid"><![CDATA[ a.exerID=#exerid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="shopid"><![CDATA[ a.shopID=#shopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="productbaseid"><![CDATA[ a.productBaseID=#productbaseid:BIGINT# ]]></isNotNull>
      <isNotEmpty prepend="and" property="prodidStr"><![CDATA[ a.productBaseID in ($prodidStr$) ]]></isNotEmpty>
      <isNotNull prepend="and" property="contentcateid"><![CDATA[ a.contentCateID=#contentcateid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="status"><![CDATA[ b.status=#status:SMALLINT# ]]></isNotNull>
    </dynamic>
  </sql>
  
  <!-- ###################### where_Clause2 ########################## -->
  <sql id="where_Clause2"> 
    <dynamic> 
      <isNotNull prepend="and" property="shopid"><![CDATA[ a.shopID=#shopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="orgbaseid"><![CDATA[ 
          exists (select 1 from OrgUser b where a.userID = b.userID 
                                   and find_in_set(#orgbaseid:BIGINT#, b.orgpath)>0)
       ]]></isNotNull>
    </dynamic>
  </sql>
    
<!-- ###################### selectByPK ########################## -->
  <select id="selectByPK" resultMap="ExeruserResult" parameterClass="java.lang.Long"> 
     select 
         exerUserID,
    shopID,
    exerID,exerVersion,
    userID,
    orgBaseID,
    startTime,
    endTime,
    objectScore,
    totalScore,
    status,
    orderNo,
    examTimes 
     from exeruser 
     where exerUserID = #value#
  </select>
  
  <!-- ###################### selectExerUser ########################## -->
  <select id="selectExerUser" resultMap="ExeruserResult" parameterClass="netTest.exercise.dto.ExeruserQuery"> 
     select  a.exerUserID, a.shopID, a.exerID, a.exerVersion, a.userID, a.orgBaseID,
             a.startTime, a.endTime, a.objectScore, a.totalScore, a.status, a.orderNo, a.examTimes 
     from exeruser a 
     where a.exerID = #exerid:BIGINT# 
     <include refid="Exeruser.where_Clause2"/>  
     <isNotEmpty property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotEmpty> 
  </select>
   
<!-- ###################### selectMyExercise ########################## -->
  <select id="selectMyExercise" resultMap="ExeruserResultEx" parameterClass="netTest.exercise.dto.ExeruserQuery"> 
     select  a.exerID, a.exerName, a.shopID, a.contentCateID, a.productBaseID,
         b.exerUserID, b.userID, b.orgBaseID, b.startTime, b.endTime, b.status,
         b.examTimes
     from Exercise a left outer join exeruser b 
        on a.exerID = b.exerID and b.userID = #userid:BIGINT#
    <include refid="Exeruser.where_Clause1"/>  
    <isNotEmpty property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotEmpty> 
  </select>
  
  <!-- ###################### selectByLogicPK ########################## -->
  <select id="selectByLogicPK" resultMap="ExeruserResult" parameterClass="netTest.exercise.vo.Exeruser"> 
     select   exerUserID, shopID, exerID,exerVersion, userID, orgBaseID,
    startTime, endTime, objectScore, totalScore, status, orderNo, examTimes 
     from exeruser 
     where exerID = #exerid:BIGINT# and userID = #userid:BIGINT# 
  </select>
  
<!-- ###################### insert ########################## -->
  <insert id="insert" parameterClass="netTest.exercise.vo.Exeruser"> 
     insert into exeruser
     (     exerUserID,
    shopID,
    exerID,exerVersion,
    userID,
    orgBaseID,
    startTime,
    endTime,
    objectScore,
    totalScore,
    status,
    orderNo,
    examTimes ) 
    values 
     (     #exeruserid:BIGINT#, 
    #shopid:BIGINT#, 
    #exerid:BIGINT#, #exerversion:INTEGER#,
    #userid:BIGINT#, 
    #orgbaseid:BIGINT#, 
    #starttime:TIMESTAMP#, 
    #endtime:TIMESTAMP#, 
    #objectscore:REAL#, 
    #totalscore:REAL#, 
    #status:SMALLINT#, 
    #orderno:INTEGER#, 
    #examtimes:INTEGER# )
	 <selectKey resultClass="java.lang.Long" keyProperty="exeruserid" >  
        SELECT   LAST_INSERT_ID()  
     </selectKey> 
  </insert>
  
<!-- ###################### updateByPK ########################## -->
  <update id="updateByPK" parameterClass="netTest.exercise.vo.Exeruser"> 
     update exeruser
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="exerversion"><![CDATA[ exerVersion=#exerversion:INTEGER# ]]></isNotNull>
      <isNotNull prepend="," property="orgbaseid"><![CDATA[ orgBaseID=#orgbaseid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="," property="starttime"><![CDATA[ startTime=#starttime:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="endtime"><![CDATA[ endTime=#endtime:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="objectscore"><![CDATA[ objectScore=#objectscore:REAL# ]]></isNotNull>
      <isNotNull prepend="," property="totalscore"><![CDATA[ totalScore=#totalscore:REAL# ]]></isNotNull>
      <isNotNull prepend="," property="status"><![CDATA[ status=#status:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="orderno"><![CDATA[ orderNo=#orderno:INTEGER# ]]></isNotNull>
      <isNotNull prepend="," property="examtimes"><![CDATA[ examTimes=#examtimes:INTEGER# ]]></isNotNull>

    </dynamic> where exerUserID = #exeruserid:BIGINT#
  </update>
  
  <!-- ###################### updateByLogicPK ########################## -->
  <update id="updateByLogicPK" parameterClass="netTest.exercise.vo.Exeruser"> 
     update exeruser
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="exerversion"><![CDATA[ exerVersion=#exerversion:INTEGER# ]]></isNotNull>
      <isNotNull prepend="," property="starttime"><![CDATA[ startTime=#starttime:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="endtime"><![CDATA[ endTime=#endtime:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="objectscore"><![CDATA[ objectScore=#objectscore:REAL# ]]></isNotNull>
      <isNotNull prepend="," property="totalscore"><![CDATA[ totalScore=#totalscore:REAL# ]]></isNotNull>
      <isNotNull prepend="," property="status"><![CDATA[ status=#status:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="orderno"><![CDATA[ orderNo=#orderno:INTEGER# ]]></isNotNull>
      <isNotNull prepend="," property="examtimes"><![CDATA[ examTimes=#examtimes:INTEGER# ]]></isNotNull>
    </dynamic> where exerID=#exerid:BIGINT# and userID=#userid:BIGINT#
  </update>
  
  <!-- ###################### deleteByPK ########################## -->
  <delete id="deleteByPK" parameterClass="java.lang.Long"> 
     delete from exeruser where exerUserID = #value#
  </delete>
  
  <delete id="deleteByExer" parameterClass="java.lang.Long"> 
     delete from exeruser where exerID = #value#
  </delete>
  
  
  <!-- ###################### selectExerUserCount ########################## -->
  <select id="selectExerUserCount" resultClass="java.lang.Integer" parameterClass="netTest.exercise.dto.ExeruserQuery"> 
     select  count(*)  from exeruser a 
     where a.exerID = #exerid:BIGINT# 
     <include refid="Exeruser.where_Clause2"/> 
  </select>
    
</sqlMap>
