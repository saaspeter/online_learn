package netTest.prodcont.dao;

import java.util.List;

import commonTool.base.Page;
import netTest.prodcont.vo.Contentcate;
import netTest.prodcont.dto.ContentcateQuery;

public interface ContentcateDao {
   
    /**
     * select some record by PK
     */
    public Contentcate selectByPK(Long pk);
    
    /**
     * select some record by PK Array
     */
    public List<Contentcate> selectByPKArr(Long[] pkArr);
            
    /**
     * select records by queryVO
     */
    public List selectByVO(ContentcateQuery queryVO);
    
    /**
     * 根据父亲节点查找其下所有子选项
     * @param pid
     * @return
     */
    public List<Contentcate> getChildNodes(Long productbaseid,Long pid);
    
    /**
     * 查询整个产品的所有目录，并把目录按父子关系组成一个list, 放到每个vo中，返回最上层vo
     */
    public List<Contentcate> getAllInOne(Long productbaseid);
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Contentcate record);

    /**
     * update a record By PK
     */
    public int updateByPK(Contentcate record);

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Contentcate save(Contentcate record);
    
    /**
     * delete records by product
     */
    public int deleteByProd(Long productid);
    
    public int deleteByPK(Long pk);
    
    /**
     * 查询课程目录中没有学习资料的章节目录. 当课程没有章节的时候返回也是null
     * @return 章节目录 list
     */
    public List<Contentcate> getCateNotExistInLearncontent(Long productid);
    
    /**
     * 查询一个目录中learncontent的数量
     * @param productid
     * @param contentcateid
     * @return
     */
    public int getLearnCountInCate(Long productid, Long contentcateid);
	
}
