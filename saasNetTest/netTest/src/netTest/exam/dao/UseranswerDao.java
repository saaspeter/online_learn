package netTest.exam.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;

import netTest.exam.dto.UseranswerQuery;
import netTest.exam.vo.Answerquestype;
import netTest.exam.vo.Useranswer;

public interface UseranswerDao {
   
    /**
     * select some record by PK
     */
    public Useranswer selectByPK(Long pk);
    
    /**
     * select records by queryVO
     */
    public List<Useranswer> selectByVO(UseranswerQuery queryVO);
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Useranswer record);

    /**
     * update a record By PK
     */
    public int updateByPK(Useranswer record);

	/**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Useranswer save(Useranswer record);

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk);
    
    /**
     * delete user's answer by test
     */
    public int deleteByTest(Long testid, Long shopid);
    
    /**
     * job清理opentest中的useranswer的记录
     * @param date
     */
    public void cleanOpentestUseranswer(Date date);

	/**
     * insertBatch records of List
     */
    public int insertBatch(List list);
    
    /**
     * deleteBatch records by the String Array of PK
     */
    public int deleteBatchByPK(String[] pkArray);
    
    /**
     * 查询用户某次考试的某份试卷的所有答案
     * @param shopid
     * @param testid
     * @param userid
     * @param paperid
     * @param needRandom:是否按乱序的查询。如果是1则直接查询出答案，如果是0则按照题目中的quesOrder排序
     * @return
     */
    public List qryUseranswerList(Long shopid,Long testid,Long userid,Long paperid,int needRandom);
    
    /**
     * 查询出用户对某次考试的试卷答案
     * 返回Map,主键是问题的类型,值是该类问题的用户答案类型Answerquestype.
     * 在该VO中包含了用户该种类型题目答案List集合。同时把子问题放入了父问题的subanswList里
     * @param shopid
     * @param testid
     * @param userid
     * @param paperid
     * @param needRandom:是否按乱序的查询。如果是1则直接查询出答案，如果是0则按照题目中的quesOrder排序
     * @return
     */
    public Map<Long,Answerquestype> qryAnswerMap(Long shopid,Long testid,Long userid,Long paperid,int needRandom);
    
    /**
     * 考试的时候更新用户的答案。仅仅更新答案和分数的信息
     * @param list
     * @return
     */
    public int updBatchUseranswer(List<Useranswer> list);
    
    /**
     * 根据主键更新考生答案状态
     */
    public int updStatusBatchByPK(List<Useranswer> list);
    
    /**
     * 查询用户答案数量
     * @param testid
     * @param paperid
     * @param shopid
     * @param searchType:0 查询全部阅卷类型题目，1代表查询客观题，2查询主观题，3查询主客观题，4查询客观题和主客观题
     *                   5 查询主观题和主客观题
     * @return
     */
    public long countAllTestAnswer(Long testid,Long paperid,Long shopid,Integer searchType,Short examinestatus);
    
    /**
     * 查询考生答案阅卷题目数情况. 返回的Map中，key是问题的quentypeID,值是UseranswerQuery，其中有值代表各种评阅情况的题目数
     * @param shopid
     * @param testid
     * @param paperid
     * @param searchType:0 查询全部阅卷类型题目，1代表查询客观题，2查询主观题，3查询主客观题，4查询客观题和主客观题
     *                   5 查询主观题和主客观题
     * @return 
     */
    public Map<Long,UseranswerQuery> countQuestypeAnswer(Long testid,Long paperid,Long shopid,int searchType);
    	
}
