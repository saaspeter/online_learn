package netTest.exam.dao;

import java.util.Date;
import java.util.List;

import commonTool.base.Page;
import netTest.exam.vo.Testinfo;
import netTest.exam.dto.TestinfoQuery;

public interface TestinfoDao {
   
    /**
     * select some record by PK
     */
    public Testinfo selectByPK(Long pk);
            
    /**
     * select records by queryVO
     */
    public List selectByVO(TestinfoQuery queryVO);
    
    /**
     * 查询产品正在进行的或即将进行的考试
     */
    public List<Testinfo> selectUpcomingByProduct(Long productid);
    
    /**
     * 查询考试数量
     * @param productid
     * @param shopid
     * @param teststatus
     * @return
     */
    public int countTestinfoNumber(Long productid, Long shopid, Short teststatus);
        
    /**
     * 新增考试时判断用户输入的考试时间是否和本单位已有的考试有时间冲突
     * @param shopid
     * @param teststartdate
     * @param testenddate
     * @param orgbaseid
     * @return
     */
    public List qryTestCollideAddTest(Long shopid,Date teststartdate,Date testenddate,Long orgbaseid,Long testid);
    
//    /**
//     * 在考试信息列表页面显示某个单位是否有时间冲突的考试
//     * @param shopid
//     * @param teststartdate
//     * @param testenddate
//     * @param orgbaseid
//     * @return
//     */
//    public List qryTestCollideForDept(Long shopid,Long orgbaseid);
    
    /**
     * select page by queryVO 
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @param pageIndex:the current page num,start from 1;
     * @param pageSize:the page size,if less equal than 0,the default PlatfromConstant.PAGESIZE will be used;
     * @return Page
     * @throws Exception
     */
    public Page selectByVOPage(TestinfoQuery queryVO,int pageIndex,int pageSize,Integer total);
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Testinfo record);

    /**
     * update a record By PK
     */
    public int updateByPK(Testinfo record);
    
    /**
     * 修改考试状态
     * @param testid
     * @param nextteststatus
     * @return
     */
    public int updTeststatus(Long testid,Short nextteststatus,Date updatetime);

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Testinfo save(Testinfo record);

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk);
    
    /**
     * deleteBatch records by the String Array of PK
     */
//    public int deleteBatchByPK(String[] pkArray);
	
}
