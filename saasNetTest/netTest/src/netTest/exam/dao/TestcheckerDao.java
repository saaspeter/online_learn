package netTest.exam.dao;

import java.util.List;
import commonTool.base.Page;
import netTest.exam.vo.Testchecker;
import netTest.exam.dto.TestcheckerQuery;

public interface TestcheckerDao {
   
    /**
     * select some record by PK
     */
    public Testchecker selectByPK(Long pk);
    
    /**
     * select some record by logic PK
     */
    public Testchecker selectByLogicPK(Long userid, Long testid);
            
    /**
     * select records by queryVO
     */
    public List selectByVO(TestcheckerQuery queryVO);
    
    /**
     * 查询阅卷人员需要评阅的考试信息列表
     */
    public List qryCheckTestListByVO(Long userid, Long shopid, Long productid, 
    								 Short teststatus, String teststatusStr, String orderbyStr);
    
    /**
     * select page by queryVO 
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @param pageIndex:the current page num,start from 1;
     * @param pageSize:the page size,if less equal than 0,the default PlatfromConstant.PAGESIZE will be used;
     * @return Page
     * @throws Exception
     */
    public Page selectByVOPage(TestcheckerQuery queryVO,int pageIndex,int pageSize,Integer total);
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Testchecker record);

    /**
     * update a record By PK
     */
    public int updateByPK(Testchecker record);

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Testchecker save(Testchecker record);

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long testid,Long userid);
    
    /**
     * delete a record by Test
     */
    public int deleteByTest(Long testid,Long shopid);
    
	/**
     * insertBatch records of List
     */
    public int insertBatch(List list);
    
    /**
     * 查询设置考试中已有的阅卷人员。用于过滤阅卷人员
     * 返回的是阅卷人员的串，用','隔开
     * @param testid
     * @param userIdStr
     * @param shopid
     * @return
     */
    public String qryJoinTestcheckers(Long testid,String userIdStr,Long shopid);
    
	/**
	 * 批量增加阅卷人员，会过滤掉已经有的阅卷人员
	 * @param testid
	 * @param shopid
	 * @param userIdStr
	 * @return
	 */
	public int addTestcheckers(Long testid,Long shopid,String userIdStr);
	
    /**
     * 批量删除阅卷老师
     * @param shopid
     * @param testid
     * @param userArr
     * @return
     */
    public int deleteCheckers(Long shopid,Long testid,String[] userArr);
    
}
