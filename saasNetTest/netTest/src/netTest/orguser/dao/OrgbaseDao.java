package netTest.orguser.dao;

import java.util.List;
import commonTool.base.Page;
import netTest.orguser.dto.OrgbaseQuery;
import netTest.orguser.vo.Orgbase;

public interface OrgbaseDao {
   
    /**
     * select some record by PK
     */
    public Orgbase selectByPK(Long pk)  ;
    
    /**
     * select all records
     * @return
     */
    public List selectAll() ;
        
    /**
     * select records by queryVO
     */
    public List selectByVO(OrgbaseQuery queryVO) ;
    
    /**
     * 查找该单位的所有上级单位vo，包括本单位vo
     * @param orgbaseid
     * @return
     * @throws Exception
     */
    public List getTopOrgs(Long orgbaseid);
        
    /**
     * select page by queryVO 
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @param pageIndex:the current page num,start from 1;
     * @param pageSize:the page size,if less equal than 0,the default PlatfromConstant.PAGESIZE will be used;
     * @return Page
     * @throws Exception
     */
    public Page selectByVOPage(OrgbaseQuery queryVO,int pageIndex,int pageSize,Integer total) ;
    
    /**
     * select vos by QueryVO,the vo includes the childnum which is the children of a org
     * @param queryVO
     * @return
     * @throws Exception
     */
    public List selectByVOChildnum(OrgbaseQuery queryVO) ;
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Orgbase record) ;

    /**
     * update a record By PK
     */
    public int updateByPK(Orgbase record) ;

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Orgbase save(Orgbase record) ;

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk) ;
    
    /**
     * delete records by queryVO
     */
    public int deleteByVO(OrgbaseQuery queryVO) ;

	/**
     * insertBatch records of List
     */
    public int insertBatch(List list) ;
    
    /**
     * updateBatch records of List
     */
    public int updateBatch(List list) ;
    
    /**
     * deleteBatch records by the Long Array of PK
     */
    public int deleteBatchByPK(Long[] pkArray) ;
    
    /**
     * deleteBatch records by the String Array of PK
     */
    public int deleteBatchByPK(String[] pkArray) ;
	
}
