package netTest.product.dao;

import java.util.List;

import netTest.product.dto.ProductbaseQuery;
import netTest.product.vo.Productbase;
import commonTool.base.Page;

public interface ProductbaseDao {
   
    /**
     * select some record by PK
     */
    public Productbase selectByPK(Long pk);
    
    /**
     * select product detail description
     */
    public Productbase selectProdDesc(Long pk);
    
    /**
     * select product satis information
     */
    public Productbase selectProdSatis(Long pk);
    
    /**
     * 查询商店有的产品数目
     * @param shopid
     * @return
     */
    public Integer selShopProdCount(Long shopid);
        
    /**
     * select records by queryVO
     */
    public List selectByVO(ProductbaseQuery queryVO);
    
//    /**
//     * select records by shop
//     */
//    public List<Productbase> selectByShop(Long shopid);
    
    public List<Productbase> selectByShop(Long shopid, Long categoryid, 
    		Short promotable, Short paytype, Short isopen, Short status);
    
    /**
     * select records by pk string, the pkStr joined by comma
     */
    public List<Productbase> selectByPkStr(String pkStr);
    
    public List<Productbase> selectMostLearned(Long categoryid);
    
    public Page selectByVOPage(Long categoryid, String productname, Long shopid, 
			   int isIncludeChild, Short issysgoodproduct, Short paytype,
			   Short isopen, Short status, Long localeid, String regioncode,
			   int pageIndex,int pageSize,Integer total);
    
     /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Productbase record) ;

    /**
     * update a record By PK
     */
    public int updateByPK(Productbase record);

	/**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     */
    public Productbase save(Productbase record);
    
    /**
     * save product detail description
     */
    public Long saveProdExt(Productbase vo);
    
    /**
     * save product satis information
     * @param updateway: 1 表示是增量的更新，在原有数量基础上更新
     *                   2 表示直接更新传入数量
     */
    public Long saveProdSatis(Productbase vo, int updateway);

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk);
	
}
