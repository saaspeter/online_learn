package netTest.product.dao;

import java.util.Date;
import java.util.List;

import netTest.product.dto.UserproductQuery;
import netTest.product.vo.Userproduct;
import commonTool.base.Page;

public interface UserproductDao {
   
    /**
     * select some record by PK
     */
    public Userproduct selectByPK(Long pk);
    
    /**
     * select some record by PK logic
     */
    public Userproduct selectByLogicPk(Long userid,Long productbaseid);
    
    /**
     * 查询一个产品的学习用户数目
     */
    public int selectUserCountOfProduct(Long productid);
        
    /**
     * select records by queryVO
     */
    public List<Userproduct> selectByVO(UserproductQuery queryVO);
    
    /**
     * 查询学习某一课程的admin
     * @param productid
     * @return
     */
    public List<Long> selectProductAdminUserId(Long productid);
    
    /**
     * 查询学习某一课程的所有用户的id
     * @param productid
     * @return
     */
    public List<Long> selectAllProdUserId(Long productid, Long shopid, Short prodUsetype);
        
    /**
     * 把userproduct中使用产品快过期的记录生成usernotification
     * 此函数只处理按日期计算的产品
     * @param currentDate
     * @param days 多少天内到期
     */
    public void notifyDueDateProduct(Date currentDate, int days, 
    		Short notifytype, String messcode, String content, 
    		Long creatorid,	Short isread, String linkurl, Short openlinktype);
    
    /**
     * 把userproduct中使用产品快过期的记录生成usernotification
     * 此函数只处理按次数计算的产品
     * 只取前500条，为性能考虑
     * @param currentDate
     * @param times 还有多少次到期
     */
    public void notifyDueNumsProduct(Date currentDate, Integer times, 
    		Short notifytype, String messcode, String content, 
    		Long creatorid,	Short isread, String linkurl, Short openlinktype);
    
    /**
     * 查询出已经到期的用户产品，最多返回500条
     */
    public List<Userproduct> selectNeedRemoveProd(Date currentDate);
    
    /**
     * 查询用户目前在使用的产品服务列表。
     * @param userid
     * @param shopid
     * @param status:有效或失效的产品服务
     * @return
     */
    public List<Userproduct> selUserProds(Long userid, Long shopid, Short status);
    
    /**
     * 查询用户最近学习的6个产品
     * @return
     */
    public List<Userproduct> selMostAccessProds(Long userid);
    
    /**
     * select page by queryVO 
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @param pageIndex:the current page num,start from 1;
     * @param pageSize:the page size,if less equal than 0,the default PlatfromConstant.PAGESIZE will be used;
     * @return Page
     * @throws Exception
     */
    public Page selectByVOPage(UserproductQuery queryVO,int pageIndex,int pageSize,Integer total);
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Userproduct record) ;

    /**
     * update a record By PK
     */
    public int updateByPK(Userproduct record) ;
    
    /**
     * 更新产品使用方式和状态
     * @param pk
     * @param produsetype
     */
    public int updUsetypeStatusByPK(Long pk, Short produsetype, Short status);

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Userproduct save(Userproduct record) ;

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk);
    
    public int deleteByPKArray(List<Userproduct> usrprdList);
        
   
    /**
     * 查询用户是否已经有了该产品
     * @param productbaseid
     * @param shopid
     * @param userid
     * @return
     */
    public boolean isExist(Long productbaseid, Long userid);
    
    /**
     * 更新用户使用产品的最后日期
     * @param pk
     * @param produsetype
     */
    public void updateAccessTime(Long userid, Long productid, Date accessTime);
	
}
