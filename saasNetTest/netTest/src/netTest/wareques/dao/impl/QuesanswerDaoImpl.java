package netTest.wareques.dao.impl;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import netTest.bean.BeanFactory;
import netTest.wareques.dao.QuesanswerDao;
import netTest.wareques.vo.Quesanswer;

import org.apache.log4j.Logger;

import commonTool.base.BaseDao;
import commonTool.util.StringUtil;

public class QuesanswerDaoImpl extends BaseDao implements QuesanswerDao {

	static Logger log = Logger.getLogger(QuesanswerDaoImpl.class.getName());
	
	private String table = "Quesanswer";
	
    /**
     *
     */
    public QuesanswerDaoImpl() {
        super();
    }
    
    /**
     * select some record by PK
     */
    public Quesanswer selectByPK(Long pk){
    	if(pk==null)
    		return null;
		Quesanswer record = (Quesanswer) this.queryForObject(table+".selectByPK", pk);
		return record;
    }
    
    /**
     * select records by queryVO
     */
    public List selectByVO(Quesanswer vo){
		if(vo==null)
			return new ArrayList();
		List list = this.queryForList(table+".selectByVO", vo);
		return list;
    }
    
    
    /**
     * select records by pk string, joined by comma
     */
    public Map<Long, Quesanswer> selectByPkStr(String selectByPkStr){
		if(selectByPkStr==null)
			return new HashMap<Long, Quesanswer>();
		selectByPkStr = StringUtil.trimComma(selectByPkStr);
		Map<Long, Quesanswer> map = new HashMap<Long, Quesanswer>();
		if(selectByPkStr!=null && !"".equals(selectByPkStr)){
			List list = this.queryForList(table+".selectByPkStr", selectByPkStr);
			if(list!=null){
			   Quesanswer vo = null;
			   for(int i=0;i<list.size();i++){
				  vo = (Quesanswer)list.get(i);
				  map.put(vo.getQuesid(), vo);
			   }
			}
		}
		return map;
    }
    
    /**
     * 保存，不存在就插入，否则更新
     * @param vo
     * @return
     */
    public int save(Quesanswer vo){
    	if(vo==null||vo.getQuesid()==null)
    		return 0;
    	Quesanswer dbvo = selectByPK(vo.getQuesid());
    	if(dbvo==null){
    		insert(vo);
    	}else {
    		updateByPK(vo);
    	}
    	return 1;
    }
  
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Quesanswer record){
    	if(record==null||!record.canInsert())
    		return null;
		return (Long)super.insert(table+".insert", record);
    }

    /**
     * update a record By PK
     */
    public int updateByPK(Quesanswer record){
    	if(record==null||!record.canUpdate())
    		return 0;
		int rows = super.update(table+".updateByPK", record);
		return rows;
    }

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk){
    	if(pk==null)
    		return 0;
		int rows = super.delete(table+".deleteByPK", pk);
		return rows;
    }

	/**
     * insertBatch records of List
     */
    public int insertBatch(List list){
    	if(list==null||list.size()<=0)
    		return 0;
    	int rows = 0;
       	rows = super.insertBatch(table+".insert", list);
       	return rows;
    }
    
    /**
     * deleteBatch records by the String Array of PK
     */
    public int deleteBatchByPK(String[] pkArray){
    	if(pkArray==null||pkArray.length<=0)
    		return 0;
    	int rows = 0;
    	Long[] arrs = new Long[pkArray.length];
		for(int i=0;i<pkArray.length;i++){
			if(pkArray[i]!=null)
				arrs[i] = new Long(Long.parseLong(pkArray[i]));
		}
		rows = super.deleteBatch(table+".deleteByPK", arrs);
		return rows;
    }
    
    /**
     * static spring getMethod
     */
     public static QuesanswerDao getInstance(){
       	 QuesanswerDao dao = (QuesanswerDao)BeanFactory.getBeanFactory().getBean("quesanswerDao");
         return dao;
     }

}
