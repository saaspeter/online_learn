package commonWeb.security.dao;

import java.util.List;
import java.util.Map;
import commonTool.base.Page;
import commonWeb.security.dto.ResourcesQuery;
import commonWeb.security.dto.UserRoleQuery;
import commonWeb.security.vo.Resources;

public interface ResourcesDao {
   
    /**
     * select some record by PK
     */
    public Resources selectByPK(Long pk);
	
    /**
     * select some record by PK
     */
    public Resources selectByPK(Long pk,Long localeid);
    
    /**
     * 根据系统编码查找所有的资源
     * @param syscode
     * @return
     */
    public List<Resources> qryAllResource(String syscode);
    
    /**
     * 根据id集合得到resString的集合
     * @param idStr
     * @return
     */
    public List<String> getRestringByIdStr(String idStr);
    
    /**
     * 查询资源id及其子资源的resString连接
     * @param parentRescId
     * @return
     */
    public List<String> qryRescAndChild(Long parentRescId);
    
    /**
     * 根据连接地址查找资源
     * @param syscode
     * @param resString
     * @return
     */
    public Resources selectByRes(String syscode, String resString);
    
    /**
     * 根据资源连接查询其对应的Roles
     * @param syscode
     * @param resString
     * @return
     */
    public List<String> qryRolesByRes(String syscode, String resString);
    
    /**
     * select all records
     * @return
     */
    public List selectAll();
        
    /**
     * select records by queryVO
     */
    public List selectByVO(ResourcesQuery queryVO);
    
    /**
     * 查询资源权限目录树
     * @param pid
     * @return
     */
    public List qryRescfoldTree(String syscode,Long pid,Long localeid);
    
    /**
     * select page by queryVO 
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @param pageIndex:the current page num,start from 1;
     * @param pageSize:the page size,if less equal than 0,the default PlatfromConstant.PAGESIZE will be used;
     * @return Page
     * @throws Exception
     */
    public Page selectByVOPage(ResourcesQuery queryVO,int pageIndex,int pageSize,Integer total);
    
    /**
     * 根据角色id选择该角色下的资源列表
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @throws Exception
     */
    public List selectByRoleId(ResourcesQuery queryVO);
    
    /**
     * 选择某角色下可选资源列表，即还没有选择的资源列表.
     * 本方法会过滤该用户所能看到有权限的权限
     * @param queryVO
     * @param pageIndex
     * @param pageSize
     * @return
     */
    public List selectRescsForRoleAddRestrict(UserRoleQuery queryVO);
    
    /**
     * 选择某角色下可选资源列表，即还没有选择的资源列表. 不进行过滤
     * @param queryVO
     * @param pageIndex
     * @param pageSize
     * @return
     */
    public List selectRescsForRoleAdd(UserRoleQuery queryVO);
    
    /**
     * 查询资源的所有关联资源的resString
     * @param syscode
     * @param resString
     * @return
     */
    public List<String> getLinkRescString(String linkIdStr, String syscode);
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Resources record);

    /**
     * update a record By PK
     */
    public int updateByPK(Resources record);

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Resources save(Resources record);

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk) throws Exception ;
    
    /**
     * delete records by queryVO
     */
    public int deleteByVO(ResourcesQuery queryVO);

	/**
     * insertBatch records of List
     */
    public int insertBatch(List list);
    
    /**
     * updatePathBatch records of List
     */
    public int updatePathBatch(List list);
    
    /**
     * deleteBatch records by the Long Array of PK
     */
    public Map deleteBatchByPK(Long[] pkArray,Long localeid);
    
    /**
     * deleteBatch records by the String Array of PK
     */
    public Map deleteBatchByPK(String[] pkArray,Long localeid);
    
    /**
     * 检查资源是否有被引用
     * @param pkArray
     * @param localeid
     * @return
     */
    public Map checkRescRef(Long[] pkArray,Long localeid);
	
}
