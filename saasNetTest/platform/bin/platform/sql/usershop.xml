<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Usershop">
<!-- ###################### UsershopResult ########################## -->
  <resultMap id="UsershopResult" class="platform.vo.Usershop">
    <result column="userShopID" property="usershopid" jdbcType="BIGINT"/>
    <result column="shopID" property="shopid" jdbcType="BIGINT"/>
    <result column="userID" property="userid" jdbcType="BIGINT"/>
    <result column="nickName" property="nickname" jdbcType="VARCHAR"/>
    <result column="loginname" property="loginname" jdbcType="VARCHAR"/>
    <result column="userShopType" property="usershoptype" jdbcType="SMALLINT"/>
    <result column="joinDate" property="joindate" jdbcType="TIMESTAMP"/>
    <result column="joinWay" property="joinway" jdbcType="SMALLINT"/>
    <result column="areaInProduct" property="areainproduct" jdbcType="SMALLINT"/>
    <result column="userShopStatus" property="usershopstatus" jdbcType="SMALLINT"/>
    <result column="userShopNotes" property="usershopnotes" jdbcType="VARCHAR"/>
  </resultMap>
  
  <!-- ###################### UsershopResultEx ########################## -->
  <resultMap id="UsershopResultEx" class="platform.vo.Usershop" extends="Usershop.UsershopResult">
    <result column="displayname" property="displayname" jdbcType="VARCHAR"/>
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="localeID" property="localeid" jdbcType="BIGINT"/>
    <result column="timezone" property="timezone" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="SMALLINT"/>
  </resultMap>
    
<!-- ###################### where_Clause ########################## -->
  <sql id="where_Clause"> 
    <dynamic prepend="where"> 
      <isNotNull prepend="and" property="usershopid"><![CDATA[ a.userShopID=#usershopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="shopid"><![CDATA[ a.shopID=#shopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="userid"><![CDATA[ a.userID=#userid:BIGINT# ]]></isNotNull>
      <isNotEmpty prepend="and" property="useridStr"><![CDATA[ a.userID in($useridStr$) ]]></isNotEmpty>
      <isNotEmpty prepend="and" property="nickname"><![CDATA[ a.nickName like CONCAT('%',#nickname:VARCHAR#,'%') ]]></isNotEmpty>
      <isNotEmpty prepend="and" property="loginname"><![CDATA[ a.loginname like CONCAT('%',#loginname:VARCHAR#,'%') ]]></isNotEmpty>
      <isNotNull prepend="and" property="joindate"><![CDATA[ a.joinDate=#joindate:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="and" property="joinway"><![CDATA[ a.joinWay=#joinway:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="and" property="areainproduct"><![CDATA[ a.areaInProduct=#areainproduct:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="and" property="usershopstatus"><![CDATA[ a.userShopStatus=#usershopstatus:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="and" property="productbaseid"><![CDATA[ 
                  exists (select 1 from UserProduct x where a.userID=x.userID 
                                        and x.productBaseID=#productbaseid:BIGINT# and x.status=1)
               ]]></isNotNull>
      <isNotNull prepend="and" property="orgbaseid"><![CDATA[ 
                  exists (select 1 from OrgUser y where a.userID=y.userID 
                                   and find_in_set(#orgbaseid:BIGINT#, y.orgpath)>0)
               ]]></isNotNull>
      <isNotNull prepend="and" property="roleidStr">
                  exists (select 1 from user_role z where a.userID=z.user_id and z.role_id in($roleidStr$)
                  <isNotNull prepend="and" property="shopid"><![CDATA[ z.shopID=#shopid:BIGINT# ]]></isNotNull>
                  )
      </isNotNull>
    </dynamic>
  </sql>
    
<!-- ###################### selectByPK ########################## -->
  <select id="selectByPK" resultMap="UsershopResult" parameterClass="java.lang.Long"> 
     select 
         userShopID,
    shopID,
    userID,
    nickName,loginname,
    userShopType,
    joinDate,
    joinWay,
    areaInProduct,
    userShopStatus,
    userShopNotes 
     from usershop 
     where userShopID = #value#
  </select>
  
  <!-- ###################### selectByLogicPK ########################## -->
  <select id="selectByLogicPK" resultMap="UsershopResult" parameterClass="platform.dto.UsershopQuery"> 
     select 
         userShopID,
    shopID,
    userID,
    nickName,loginname,
    userShopType,
    joinDate,
    joinWay,
    areaInProduct,
    userShopStatus,
    userShopNotes 
     from usershop 
     where shopID = #shopid:BIGINT# and userID=#userid:BIGINT#
  </select>
   
  <!-- ###################### qryUseridByDisplayname ########################## -->
  <select id="qryUseridByDisplayname" resultClass="java.lang.Long" parameterClass="platform.dto.UsershopQuery"> 
     select userID from usershop where shopID=#shopid:BIGINT# 
     <dynamic>
       <isNotEmpty prepend="and" property="nickname"><![CDATA[ nickName like CONCAT('%',#nickname:VARCHAR#,'%') ]]></isNotEmpty>
       <isNotEmpty prepend="and" property="loginname"><![CDATA[ loginname like CONCAT('%',#loginname:VARCHAR#,'%') ]]></isNotEmpty>
     </dynamic>
  </select>
   
<!-- ###################### selectByVO ########################## -->
  <select id="selectByVO" resultMap="UsershopResult" parameterClass="platform.dto.UsershopQuery"> 
     select 
         a.userShopID,
    a.shopID,
    a.userID,
    a.nickName, a.loginname, 
    a.userShopType,
    a.joinDate,
    a.joinWay,
    a.areaInProduct,
    a.userShopStatus,
    a.userShopNotes
     from usershop a 
    <include refid="Usershop.where_Clause"/>  
    <isNotEmpty property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotEmpty> 
  </select>
    
  <!-- ###################### insert ########################## -->
  <insert id="insert" parameterClass="platform.vo.Usershop"> 
     insert into usershop
     ( userShopID,
    shopID,
    userID,
    nickName,loginname,
    userShopType,
    joinDate,
    joinWay,
    areaInProduct,
    userShopStatus,
    userShopNotes ) 
    values 
     ( #usershopid:BIGINT#, 
    #shopid:BIGINT#, 
    #userid:BIGINT#, 
    #nickname:VARCHAR#, #loginname:VARCHAR#,
    #usershoptype:SMALLINT#, 
    #joindate:TIMESTAMP#, 
    #joinway:SMALLINT#, 
    #areainproduct:SMALLINT#,
    #usershopstatus:SMALLINT#, 
    #usershopnotes:VARCHAR# )
	 <selectKey resultClass="java.lang.Long" keyProperty="usershopid" >  
        SELECT   LAST_INSERT_ID()  
     </selectKey> 
  </insert>
  
  <!-- ###################### updateByPK ########################## -->
  <update id="updateByPK" parameterClass="platform.vo.Usershop"> 
     update usershop
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="nickname"><![CDATA[ nickName=#nickname:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="loginname"><![CDATA[ loginname=#loginname:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="usershoptype"><![CDATA[ userShopType=#usershoptype:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="usershopstatus"><![CDATA[ userShopStatus=#usershopstatus:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="usershopnotes"><![CDATA[ userShopNotes=#usershopnotes:VARCHAR# ]]></isNotNull>
    </dynamic> where userShopID = #usershopid:BIGINT#
  </update>
  
  <!-- ###################### updateUserLoginame ########################## -->
  <update id="updateUserLoginame" parameterClass="platform.vo.Usershop"> 
     update usershop set <![CDATA[ loginname=#loginname:VARCHAR# ]]> 
     where userID=#userid:BIGINT# 
  </update>
  
  <!-- ###################### updateByLogicPK ########################## -->
  <update id="updateByLogicPK" parameterClass="platform.vo.Usershop"> 
     update usershop
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="nickname"><![CDATA[ nickName=#nickname:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="loginname"><![CDATA[ loginname=#loginname:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="usershoptype"><![CDATA[ userShopType=#usershoptype:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="usershopstatus"><![CDATA[ userShopStatus=#usershopstatus:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="usershopnotes"><![CDATA[ userShopNotes=#usershopnotes:VARCHAR# ]]></isNotNull>
    </dynamic> where shopID=#shopid:BIGINT# and userID=#userid:BIGINT# 
  </update>
  
<!-- ###################### deleteByPK ########################## -->
  <delete id="deleteByPK" parameterClass="java.lang.Long"> 
     delete from usershop where userShopID = #value#
  </delete>
  
  <!-- ###################### deleteByShop ########################## -->
  <delete id="deleteByShop" parameterClass="java.lang.Long"> 
     delete from usershop where shopID=#shopid:BIGINT#
  </delete>
  
<!-- ###################### deleteUserInShop ########################## -->
  <delete id="deleteUserInShop" parameterClass="platform.dto.UsershopQuery"> 
     delete from usershop where shopID=#shopid:BIGINT# and userID=#userid:BIGINT# 
     <dynamic>
        <isNotNull prepend="and" property="usershoptype"><![CDATA[ userShopType=#usershoptype:SMALLINT# ]]></isNotNull>
     </dynamic>
  </delete>
  
<!-- ###################### selectAllCount ########################## -->
  <select id="selectAllCount" resultClass="java.lang.Integer"> 
     select count(*) from usershop
  </select>
  
<!-- ###################### selectByVOCount ########################## -->
  <select id="selectByVOCount" resultClass="java.lang.Integer" parameterClass="platform.dto.UsershopQuery"> 
     select count(*) from usershop a 
     <include refid="Usershop.where_Clause"/>  
     <isNotNull property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotNull> 
  </select>
  
  <!-- ###################### existNickname ########################## -->
  <select id="existNickname" resultClass="java.lang.Integer" parameterClass="platform.dto.UsershopQuery"> 
     select 1 from UserShop where shopID=#shopid:BIGINT# and nickName=#nickname:VARCHAR# 
  </select>
    
</sqlMap>
