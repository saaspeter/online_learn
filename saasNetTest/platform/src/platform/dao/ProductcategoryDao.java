package platform.dao;

import java.util.List;

import platform.dto.ProductcategoryQuery;
import platform.vo.Productcategory;
import commonTool.base.Page;

public interface ProductcategoryDao {
   
    /**
     * select some record by PK
     */
    public Productcategory selectByPK(Long pk);
    
    /**
     * select some record by logic PK
     */
    public Productcategory selectByLogicPK(Long pk, Long localeid);
    
    /**
     * 根据产品目录查询 引用该目录的产品数量 
     * @param categoryid
     * @return
     */
    public Integer selectProdnumByCate(Long categoryid, boolean includeChild);
    
    /**
     * select all records
     * @return
     */
//    public List selectAll() throws Exception ;
    
    /**
     * select records by queryVO
     */
//    public List selectByVO(ProductcategoryQuery queryVO);
    
    /**
     * 根据父目录id，查找该目录有多少子目录
     * @param parentid
     * @return
     * @throws Exception
     */
    public int selectChildNum(Long parentid, Short status);
    
    /**
     * select page by queryVO 
     * @param queryVO:the query vo,if queryVO is null,then search all
     * @param pageIndex:the current page num,start from 1;
     * @param pageSize:the page size,if less equal than 0,the default PlatfromConstant.PAGESIZE will be used;
     * @return Page
     * @throws Exception
     */
    public Page selectByVOPage(ProductcategoryQuery queryVO,int pageIndex,int pageSize,Integer total);
    
    /**
     * 查询子系统的最上级目录id
     * @param syscode
     * @return
     */
    public Long getSystemTopCategory(String syscode);
    
    /**
     * insert a record,
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Productcategory record);

    /**
     * update a record By PK
     */
    public int updateByPK(Productcategory record);

	/**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Productcategory save(Productcategory record);

    /**
     * 从产品目录表中删除该记录(包括两张表中的记录)和该记录的所有下级记录
     */
    public int deleteByPK(Long pk);

	/**
     * insertBatch records of List，同时插入这些记录的上下级关系记录
     */
//    public int insertBatch(List list);
        
    
    public List getChildNodes(Long pid,String syscode,Long localeid, boolean isforAdminUse);
	
}
