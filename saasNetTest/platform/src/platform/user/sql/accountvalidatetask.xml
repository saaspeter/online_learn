<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Accountvalidatetask">
<!-- ###################### accountvalidatetaskResult ########################## -->
  <resultMap id="AccountvalidatetaskResult" class="platform.user.vo.Accountvalidatetask">
    <result column="id" property="id" jdbcType="BIGINT"/>
    <result column="userID" property="userid" jdbcType="BIGINT"/>
    <result column="email" property="email" jdbcType="VARCHAR"/>
    <result column="validateType" property="validatetype" jdbcType="VARCHAR"/>
    <result column="validateCode" property="validatecode" jdbcType="VARCHAR"/>
    <result column="status" property="status" jdbcType="SMALLINT"/>
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP"/>
    <result column="aliveEndDate" property="aliveenddate" jdbcType="TIMESTAMP"/>
    <result column="activeDate" property="activedate" jdbcType="TIMESTAMP"/>

  </resultMap>
    
<!-- ###################### where_Clause ########################## -->
  <sql id="where_Clause"> 
    <dynamic prepend="where"> 
      <isNotNull prepend="and" property="userid"><![CDATA[ userID=#userid:BIGINT# ]]></isNotNull>
      <isNotEmpty prepend="and" property="email"><![CDATA[ email=#email:VARCHAR# ]]></isNotEmpty>
      <isNotEmpty prepend="and" property="validatetype"><![CDATA[ validateType=#validatetype:VARCHAR# ]]></isNotEmpty>
      <isNotEmpty prepend="and" property="validatecode"><![CDATA[ validateCode=#validatecode:VARCHAR# ]]></isNotEmpty>
      <isNotNull prepend="and" property="status"><![CDATA[ status=#status:SMALLINT# ]]></isNotNull>
    </dynamic>
  </sql>
    
<!-- ###################### selectByPK ########################## -->
  <select id="selectByPK" resultMap="AccountvalidatetaskResult" parameterClass="java.lang.Long"> 
     select 
         id,
    userID,
    email,
    validateType,
    validateCode,
    status,
    createDate,
    aliveEndDate,
    activeDate 
     from accountvalidatetask 
     where id = #value#
  </select>
   
<!-- ###################### selectByVO ########################## -->
  <select id="selectByVO" resultMap="AccountvalidatetaskResult" parameterClass="platform.user.vo.Accountvalidatetask"> 
     select 
         id,
    userID,
    email,
    validateType,
    validateCode,
    status,
    createDate,
    aliveEndDate,
    activeDate
     from accountvalidatetask
    <include refid="Accountvalidatetask.where_Clause"/>
  </select>
  
  <!-- ###################### selectLastUserTask ########################## -->
  <select id="selectLastUserTask" resultMap="AccountvalidatetaskResult" parameterClass="platform.user.vo.Accountvalidatetask"> 
     select  id, userID, email, validateType, validateCode, status,
             createDate, aliveEndDate, activeDate 
     from accountvalidatetask 
     where email=#email:VARCHAR# and validateType=#validatetype:VARCHAR#
           <isNotNull prepend="and" property="status"><![CDATA[ status=#status:SMALLINT# ]]></isNotNull>
           order by createDate desc limit 1
  </select>
  
<!-- ###################### insert ########################## -->
  <insert id="insert" parameterClass="platform.user.vo.Accountvalidatetask"> 
     insert into accountvalidatetask
     (     id,
    userID,
    email,
    validateType,
    validateCode,
    status,
    createDate,
    aliveEndDate,
    activeDate ) 
    values 
     (     #id:BIGINT#, 
    #userid:BIGINT#, 
    #email:VARCHAR#, 
    #validatetype:VARCHAR#, 
    #validatecode:VARCHAR#, 
    #status:SMALLINT#, 
    #createdate:TIMESTAMP#, 
    #aliveenddate:TIMESTAMP#, 
    #activedate:TIMESTAMP# )
	 <selectKey resultClass="java.lang.Long" keyProperty="id" >  
        SELECT   LAST_INSERT_ID()  
     </selectKey> 
  </insert>
  
<!-- ###################### updateByPK ########################## -->
  <update id="updateByPK" parameterClass="platform.user.vo.Accountvalidatetask"> 
     update accountvalidatetask
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="userid"><![CDATA[ userID=#userid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="," property="email"><![CDATA[ email=#email:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="validatetype"><![CDATA[ validateType=#validatetype:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="validatecode"><![CDATA[ validateCode=#validatecode:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="status"><![CDATA[ status=#status:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="createdate"><![CDATA[ createDate=#createdate:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="aliveenddate"><![CDATA[ aliveEndDate=#aliveenddate:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="activedate"><![CDATA[ activeDate=#activedate:TIMESTAMP# ]]></isNotNull>

    </dynamic> where id = #id:BIGINT#
  </update>
  
<!-- ###################### deleteTask ########################## -->
  <delete id="deleteTask" parameterClass="platform.user.vo.Accountvalidatetask"> 
     delete from accountvalidatetask where email=#email:VARCHAR# 
                    and validateType=#validatetype:VARCHAR#
     <isNotEmpty prepend="and" property="validatecode"><![CDATA[ validateCode=#validatecode:VARCHAR# ]]></isNotEmpty>
  </delete>
  
  <!-- ###################### deleteByUserID ########################## -->
  <delete id="deleteByUserID" parameterClass="java.lang.Long"> 
     delete from accountvalidatetask where  userID = #value# 
  </delete>
  
    
</sqlMap>
