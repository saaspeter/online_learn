package platform.user.dao.impl;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import platform.bean.BeanFactory;
import platform.user.dao.AccountvalidatetaskDao;
import platform.user.vo.Accountvalidatetask;

import commonTool.base.BaseDao;

public class AccountvalidatetaskDaoImpl extends BaseDao implements AccountvalidatetaskDao {

	static Logger log = Logger.getLogger(AccountvalidatetaskDaoImpl.class.getName());
	
    /**
     *
     */
    public AccountvalidatetaskDaoImpl() {
        super();
    }
    
    /**
     * 用于在用户点击active link的时候取出校验
     */
    public Accountvalidatetask selectUserTask(String email, String validatetype,
    		                                  String validatecode, Short status)
    {
    	if(email==null||"".equals(email)||validatetype==null||validatecode==null
    			||validatecode.trim().length()<1||"".equals(validatetype)||status==null)
    		return null;
    	Accountvalidatetask vo = new Accountvalidatetask();
    	vo.setEmail(email);
    	vo.setValidatetype(validatetype);
    	vo.setStatus(status);
    	vo.setValidatecode(validatecode);
    	List list = this.queryForList("Accountvalidatetask.selectByVO", vo);
    	if(list!=null&&list.size()>0){
    		vo = (Accountvalidatetask)list.get(0);
    	}else {
    		vo = null;
    	}
		return vo;
    }
    
    /**
     * 查询用户最后一次的申请task的记录，用于判断用户是否重复输入多次的申请，例如重复输入多次忘记密码
     */
    public Accountvalidatetask selectLastUserTask(String email, String validatetype,
    		                                      Short status)
    {
    	if(email==null||"".equals(email)||validatetype==null||"".equals(validatetype))
    		return null;
    	Accountvalidatetask vo = new Accountvalidatetask();
    	vo.setEmail(email);
    	vo.setValidatetype(validatetype);
    	vo.setStatus(status);
    	List list = this.queryForList("Accountvalidatetask.selectLastUserTask", vo);
    	if(list!=null&&list.size()>0){
    		vo = (Accountvalidatetask)list.get(0);
    	}else {
    		vo = null;
    	}
		return vo;
    }
           
    /**
     * select records by queryVO
     */
    public List selectByVO(Accountvalidatetask vo){
		if(vo==null)
			return new ArrayList();
		List list = this.queryForList("Accountvalidatetask.selectByVO", vo);
		return list;
    }
    
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Accountvalidatetask record){
    	if(record==null)
    		return null;
		return (Long)super.insert("Accountvalidatetask.insert", record);
    }

    /**
     * update a record By PK
     */
    public int updateByPK(Accountvalidatetask record){
    	if(record==null||record.getId()==null)
    		return 0;
		int rows = super.update("Accountvalidatetask.updateByPK", record);
		return rows;
    }
    
	/**
     * insertBatch records of List
     */
    public int insertBatch(List list){
    	if(list==null||list.size()<=0)
    		return 0;
    	int rows = 0;
       	rows = super.insertBatch("Accountvalidatetask.insert", list);
       	return rows;
    }
    
    /**
     * 删除
     */
    public void deleteUserTask(String email, String validatetype,
    		                   String validatecode)
    {
    	if(email==null||"".equals(email)||validatetype==null||"".equals(validatetype))
    		return;
    	Accountvalidatetask vo = new Accountvalidatetask();
    	vo.setEmail(email);
    	vo.setValidatetype(validatetype);
    	vo.setValidatecode(validatecode);
    	this.delete("Accountvalidatetask.deleteTask", vo);
    }
    
    /**
     * 删除
     */
    public void deleteByUserID(Long userid)
    {
    	if(userid==null)
    		return;
    	this.delete("Accountvalidatetask.deleteByUserID", userid);
    }
    
    /**
     * static spring getMethod
     */
     public static AccountvalidatetaskDao getInstance(){
       	 AccountvalidatetaskDao dao = (AccountvalidatetaskDao)BeanFactory.getBeanFactory().getBean("accountvalidatetaskDao");
         return dao;
     }
    
}
