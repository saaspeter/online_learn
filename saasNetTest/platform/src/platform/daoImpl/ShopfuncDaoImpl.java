package platform.daoImpl;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;

import platform.bean.BeanFactory;
import platform.dao.ShopfuncDao;
import platform.dto.ShopfuncQuery;
import platform.vo.Shopfunc;

import commonTool.base.BaseDao;

public class ShopfuncDaoImpl extends BaseDao implements ShopfuncDao {

	static Logger log = Logger.getLogger(ShopfuncDaoImpl.class.getName());
	
    /**
     *
     */
    public ShopfuncDaoImpl() {
        super();
    }
    
    /**
     * select some record by PK
     */
    public Shopfunc selectByPK(Long pk){
    	if(pk==null)
    		return null;
		Shopfunc record = (Shopfunc) this.queryForObject("Shopfunc.selectByPK", pk);
		return record;
    }
    
    public Shopfunc selectByLogicPK(Long shopid, String functionCode){
    	if(shopid==null || functionCode==null)
    		return null;
    	Shopfunc qryvo = new Shopfunc();
    	qryvo.setShopid(shopid);
    	qryvo.setFunctioncode(functionCode);
    	Shopfunc vo = (Shopfunc) this.queryForObject("Shopfunc.selectByLogicPK", qryvo);
		return vo;
    }

    /**
     * select records by queryVO
     */
    public List selectByVO(ShopfuncQuery queryVO) {
		if(queryVO==null)
			return new ArrayList();
		List list = this.queryForList("Shopfunc.selectByVO", queryVO);
		return list;
    }
       
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Shopfunc vo) {
    	if(vo==null && vo.getFunctioncode()==null)
    		return null;
    	Long pk = null;
    	Shopfunc tempvo = this.selectByLogicPK(vo.getShopid(), vo.getFunctioncode());
    	if(tempvo==null){
    		pk = (Long)super.insert("Shopfunc.insert", vo);
    	}
		return pk;
    }

    /**
     * update a record By PK
     */
    public int updateByPK(Shopfunc record) {
    	if(record==null||record.getShopfuncid()==null)
    		return 0;
		int rows = super.update("Shopfunc.updateByPK", record);
		return rows;
    }

    /**
     * update the record if exists pk,else insert the record
     * @param record
     * @return
     * @throws Exception
     */
    public Shopfunc save(Shopfunc record) {
    	if(record==null)
    		return null;
		if(record.getShopfuncid()==null||record.getShopfuncid().intValue()==0){
			Long pkValue = this.insert(record);
			record.setShopfuncid(pkValue);
			return record;
		}else{
			this.updateByPK(record);
			return record;
		}
    }

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk) {
    	if(pk==null)
    		return 0;
		int rows = super.delete("Shopfunc.deleteByPK", pk);
		return rows;
    }
    
    /**
     * delete records by logic pk
     */
    public int deleteByLogicPK(Long shopid, String functionCode) {
    	if(shopid==null || functionCode==null)
    		return 0;
    	Shopfunc vo = new Shopfunc();
    	vo.setShopid(shopid);
    	vo.setFunctioncode(functionCode);
		int rows = super.delete("Shopfunc.deleteByLogicPK",vo);
		return rows;
    }
    
	/**
     * insertBatch records of List
     */
    public int insertBatch(List list) {
    	if(list==null||list.size()<=0)
    		return 0;
    	int rows = 0;
       	rows = super.insertBatch("Shopfunc.insert", list);
       	return rows;
    }
    
    /**
     * updateBatch records of List
     */
    public int updateBatch(List list) {
    	if(list==null||list.size()<=0)
    		return 0;
    	int rows = 0;
       	rows = super.updateBatch("Shopfunc.updateByPK", list);
       	return rows;
    }
       
    /**
     * static spring getMethod
     */
     public static ShopfuncDao getInstance() {
       	 ShopfuncDao dao = (ShopfuncDao)BeanFactory.getBeanFactory().getBean("shopfuncDaoProxy");
         return dao;
     }
    
}
