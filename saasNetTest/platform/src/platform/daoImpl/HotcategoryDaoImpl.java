package platform.daoImpl;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.cache.annotation.Cacheable;

import platform.bean.BeanFactory;
import platform.dao.HotcategoryDao;
import platform.vo.Hotcategory;

import commonTool.base.BaseDao;

// not add cache here, all cache is in HotcategoryLogicImpl, so if need call
// this class method, need flush Logic cache
public class HotcategoryDaoImpl extends BaseDao implements HotcategoryDao {

	static Logger log = Logger.getLogger(HotcategoryDaoImpl.class.getName());
	
    /**
     *
     */
    public HotcategoryDaoImpl() {
        super();
    }
    
    /**
     * 是否存在该热门目录
     * @param categoryid
     * @param pid
     * @param localeid
     * @return -1代表缺少参数，1为存在，0为不存在
     */
    public int exists(Long categoryid, Long localeid, String syscode){
    	if(categoryid==null||syscode==null)
    		return -1;
    	Hotcategory vo = new Hotcategory();
    	vo.setCategoryid(categoryid);
    	vo.setSyscode(syscode);
    	vo.setLocaleid(localeid);
    	Object obj = this.queryForObject("Hotcategory.exists", vo);
    	int rtn = 0;
    	if(obj!=null)
    		rtn = 1;
    	return rtn;
    }
    
    /**
     * 该热门目录是否存在子目录
     * @param categoryid
     * @return -1代表缺少参数，1为存在，0为不存在
     */
    public int existsChild(Long categoryid, String syscode){
    	if(categoryid==null)
    		return -1;
    	Hotcategory vo = new Hotcategory();
    	vo.setSyscode(syscode);
    	vo.setCategoryid(categoryid);
    	Object obj = this.queryForObject("Hotcategory.existsChild", vo);
    	int rtn = 0;
    	if(obj!=null)
    		rtn = ((Integer)obj).intValue();
    	return rtn;
    }
    
    /**
     * 根据localeid选择所有本国的热门目录，包括一级和二级目录
     */
    public List<Hotcategory> selectBySyscodeLocale(Long localeid, String syscode, Short categorystatus){
    	if(localeid==null || syscode==null || syscode.trim().length()<1)
    		return new ArrayList<Hotcategory>();
    	Hotcategory vo = new Hotcategory();
    	vo.setLocaleid(localeid);
    	vo.setSyscode(syscode);
    	if(categorystatus!=null){
    		vo.setCategorystatus(categorystatus);
    	}
    	List<Hotcategory> list = (List<Hotcategory>) this.queryForList("Hotcategory.selectByLocale", vo);
		return list;
    }
       
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public Long insert(Hotcategory record){
    	if(record==null)
    		return null;
		return (Long)super.insert("Hotcategory.insert", record);
    }
    
    
    /**
     * 插入该热门目录的所有的locale记录
     */
    public Long insertAllLocale(Hotcategory record){
    	if(record==null||record.getCategoryid()==null||record.getPid()==null||record.getSyscode()==null
    			||record.getSyscode().trim().length()<1)
    		return null;
		return (Long)super.insert("Hotcategory.insertAllLocale", record);
    }
   
	/**
     * insertBatch records of List
     */
    public int insertBatch(List list){
    	if(list==null||list.size()<=0)
    		return 0;
    	int rows = 0;
       	rows = super.insertBatch("Hotcategory.insert", list);
       	return rows;
    }
    
    public int deleteByPK(Long categoryid, Long localeid, String syscode){
    	Hotcategory record = new Hotcategory();
    	record.setCategoryid(categoryid);
    	record.setSyscode(syscode);
    	record.setLocaleid(localeid);
    	int rtn = super.delete("Hotcategory.deleteByPK", record);
    	return rtn;
    }
    
    /**
     * 删除指定目录的所有国家语言设置
     * @param categoryid
     * @param pid
     * @return
     */
    public int delCategoryAllLocale(Long categoryid, String syscode){
    	Hotcategory record = new Hotcategory();
    	record.setCategoryid(categoryid);
    	record.setSyscode(syscode);
    	int rtn = super.delete("Hotcategory.delCategoryAllLocale", record);
    	return rtn;
    }
        
    /**
     * static spring getMethod
     */
     public static HotcategoryDao getInstance(){
       	 HotcategoryDao dao = (HotcategoryDao)BeanFactory.getBeanFactory().getBean("hotcategoryDao");
         return dao;
     }

    
}
