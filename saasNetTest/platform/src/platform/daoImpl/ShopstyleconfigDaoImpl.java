package platform.daoImpl;

import org.apache.log4j.Logger;
import org.springframework.cache.annotation.Cacheable;
import platform.bean.BeanFactory;
import platform.dao.ShopstyleconfigDao;
import platform.vo.Shopstyleconfig;
import commonTool.base.BaseDao;
import commonTool.cache.CacheSynchronizer;

public class ShopstyleconfigDaoImpl extends BaseDao implements ShopstyleconfigDao {

	static Logger log = Logger.getLogger(ShopstyleconfigDaoImpl.class.getName());
	
    /**
     *
     */
    public ShopstyleconfigDaoImpl() {
        super();
    }
    
    
    @Cacheable(value="platform.shopCache", key="'ShopstyleconfigDao.selectByPK~shopstyleconfig:'+#pk", unless="#result==null")
    public Shopstyleconfig selectByPK(Long pk) {
    	if(pk==null)
    		return null;
    	Shopstyleconfig record = (Shopstyleconfig) this.queryForObject("Shopstyleconfig.selectByPK", pk);
		return record;
    }
          
    /**
     * insert a record
     * @return Object with the PK(generated by DB)
     */
    public void insert(Shopstyleconfig vo) {
    	if(vo==null)
    		return;
		super.insert("Shopstyleconfig.insert", vo);
		// flush
		CacheSynchronizer.getInstance().pubFlush("platform.shopCache", Shopstyleconfig.ObjectType, vo.getShopid().toString());
    }

    /**
     * update a record By PK
     */
    public void updateByPK(Shopstyleconfig vo) {
    	if(vo==null||vo.getShopid()==null)
    		return;
		super.update("Shopstyleconfig.updateByPK", vo);
		// flush
		CacheSynchronizer.getInstance().pubFlush("platform.shopCache", Shopstyleconfig.ObjectType, vo.getShopid().toString());
    }

    /**
     * 
     */
    public void save(Shopstyleconfig record) {
    	if(record==null || record.getShopid()==null)
    		return;
    	Shopstyleconfig dbvo = selectByPK(record.getShopid());
		if(dbvo==null){
			insert(record);
		}else{
			this.updateByPK(record);
		}
    }

    /**
     * delete a record by PK
     */
    public int deleteByPK(Long pk) {
    	if(pk==null)
    		return 0;
		int rows = super.delete("Shopstyleconfig.deleteByPK", pk);
		//
		// flush
				CacheSynchronizer.getInstance().pubFlush("platform.shopCache", Shopstyleconfig.ObjectType, pk.toString());
		return rows;
    }
       
    /**
     * static spring getMethod
     */
     public static ShopstyleconfigDao getInstance() {
       	 ShopstyleconfigDao dao = (ShopstyleconfigDao)BeanFactory.getBeanFactory().getBean("shopstyleconfigDao");
         return dao;
     }
    
}
