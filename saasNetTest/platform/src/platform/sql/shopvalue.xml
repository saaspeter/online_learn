<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Shopvalue">
<!-- ###################### shopvalueResultWithoutBLOBs ########################## -->
  <resultMap id="ShopvalueResultWithoutBLOBs" class="platform.vo.Shopvalue">
    <result column="shopValueID" property="shopvalueid" jdbcType="BIGINT"/>
    <result column="shopID" property="shopid" jdbcType="BIGINT"/>
    <result column="localeID" property="localeid" jdbcType="BIGINT"/>
    <result column="isDefaultSet" property="isdefaultset" jdbcType="SMALLINT"/>
    <result column="shopName" property="shopname" jdbcType="VARCHAR"/>
  </resultMap>
  
<!-- ###################### shopvalueResult ########################## -->
  <resultMap id="ShopvalueResult" class="platform.vo.Shopvalue" extends="Shopvalue.ShopvalueResultWithoutBLOBs">
    <result column="shopDesc" property="shopdesc" jdbcType="LONGVARCHAR"/>

  </resultMap>
  
<!-- ###################### where_Clause ########################## -->
  <sql id="where_Clause"> 
    <dynamic prepend="where"> 
      <isNotNull prepend="and" property="shopvalueid"><![CDATA[ shopValueID=#shopvalueid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="shopid"><![CDATA[ shopID=#shopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="localeid"><![CDATA[ localeID=#localeid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="isdefaultset"><![CDATA[ isDefaultSet=#isdefaultset:SMALLINT# ]]></isNotNull>
      <isNotEmpty prepend="and" property="shopname"><![CDATA[ shopName=#shopname:VARCHAR# ]]></isNotEmpty>
    </dynamic>
  </sql>
  
  <!-- ###################### existcheckByname ########################## -->
  <select id="existcheckByname" resultClass="java.lang.Integer" parameterClass="java.lang.String"> 
     select 1 from dual where 
          exists (select 1 from shopvalue where shopName = #value:VARCHAR#)
        or exists (select 1 from ShopApp where shopName = #value:VARCHAR# and appStatus=4)
  </select>
  
  <!-- ###################### selectByPK ########################## -->
  <select id="selectByPK" resultMap="ShopvalueResult" parameterClass="java.lang.Long"> 
     select  shopValueID, shopID, localeID, isDefaultSet,
    		 shopName, shopDesc 
     from shopvalue 
     where shopValueID = #shopvalueid:BIGINT#
  </select>
  
<!-- ###################### selectByLogicPK ########################## -->
  <select id="selectByLogicPK" resultMap="ShopvalueResult" parameterClass="platform.vo.Shopvalue"> 
     select  shopValueID, shopID, localeID, isDefaultSet,
    		 shopName, shopDesc 
     from shopvalue 
     where shopID = #shopid:BIGINT# and localeID = #localeid:BIGINT# 
  </select>
  
  <!-- ###################### selectByShopID ########################## -->
  <select id="selectByShopID" resultMap="ShopvalueResult" parameterClass="java.lang.Long"> 
     select  shopValueID, shopID, localeID, isDefaultSet,
    		 shopName, shopDesc 
     from shopvalue 
     where shopID = #shopid:BIGINT#
  </select>
   
<!-- ###################### selectByVO ########################## -->
  <select id="selectByVO" resultMap="ShopvalueResult" parameterClass="platform.dto.ShopvalueQuery"> 
     select 
         shopValueID,
    shopID,
    localeID,
    isDefaultSet,
    shopName,
    shopDesc
     from shopvalue
    <include refid="Shopvalue.where_Clause"/>  
    <isNotNull property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotNull> 
  </select>
  
<!-- ###################### selectByVOWithoutBLOBs ########################## -->
  <select id="selectByVOWithoutBLOBs" resultMap="ShopvalueResultWithoutBLOBs" parameterClass="platform.dto.ShopvalueQuery"> 
     select 
         shopValueID,
    shopID,
    localeID,
    isDefaultSet,
    shopName
     from shopvalue
    <include refid="Shopvalue.where_Clause"/>  
    <isNotNull property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotNull> 
  </select>

<!-- ###################### insert ########################## -->
  <insert id="insert" parameterClass="platform.vo.Shopvalue"> 
     insert into shopvalue
     (     shopValueID,
    shopID,
    localeID,
    isDefaultSet,
    shopName,
    shopDesc ) 
    values 
     (     #shopvalueid:BIGINT#, 
    #shopid:BIGINT#, 
    #localeid:BIGINT#, 
    #isdefaultset:SMALLINT#, 
    #shopname:VARCHAR#,
    #shopdesc:LONGVARCHAR# )
	  <selectKey resultClass="java.lang.Long" keyProperty="shopvalueid" >  
          SELECT   LAST_INSERT_ID()  
      </selectKey> 
  </insert>
  
  <!-- ###################### updateByPK ########################## -->
  <update id="updateByPK" parameterClass="platform.vo.Shopvalue"> 
     update shopvalue
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="shopid"><![CDATA[ shopID=#shopid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="," property="localeid"><![CDATA[ localeID=#localeid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="," property="isdefaultset"><![CDATA[ isDefaultSet=#isdefaultset:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="shopname"><![CDATA[ shopName=#shopname:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="shopdesc"><![CDATA[ shopDesc=#shopdesc:LONGVARCHAR# ]]></isNotNull>
    </dynamic> where shopValueID = #shopvalueid:BIGINT#
  </update>
  
  
  <!-- ###################### updateShopnameByPK ########################## -->
  <update id="updateShopnameByPK" parameterClass="platform.vo.Shopvalue"> 
     update shopvalue set shopName=#shopname:VARCHAR# 
     where shopValueID = #shopvalueid:BIGINT#
  </update>
  
  <!-- ###################### updateShopDescByPK ########################## -->
  <update id="updateShopDescByPK" parameterClass="platform.vo.Shopvalue"> 
     update shopvalue set shopDesc=#shopdesc:LONGVARCHAR# 
     where shopValueID = #shopvalueid:BIGINT#
  </update>
  
<!-- ###################### deleteByPK ########################## -->
  <delete id="deleteByPK" parameterClass="java.lang.Long"> 
     delete from shopvalue where shopValueID = #value#
  </delete>
  
  <!-- ###################### deleteByShopid ########################## -->
  <delete id="deleteByShopid" parameterClass="java.lang.Long"> 
     delete from shopvalue where shopID = #value#
  </delete>
  
<!-- ###################### deleteByVO ########################## -->
  <delete id="deleteByVO" parameterClass="platform.dto.ShopvalueQuery"> 
     delete from shopvalue
     <include refid="Shopvalue.where_Clause"/> 
  </delete>
  
<!-- ###################### selectAllCount ########################## -->
  <select id="selectAllCount" resultClass="java.lang.Integer"> 
     select count(*) from shopvalue
  </select>
  
<!-- ###################### selectAllWithoutBLOBsCount ########################## -->
  <select id="selectAllWithoutBLOBsCount" resultClass="java.lang.Integer"> 
     select count(*) from shopvalue
  </select>
    
<!-- ###################### selectByVOCount ########################## -->
  <select id="selectByVOCount" resultClass="java.lang.Integer" parameterClass="platform.dto.ShopvalueQuery"> 
     select count(*) from shopvalue
     <include refid="Shopvalue.where_Clause"/>  
  </select>
  
<!-- ###################### selectByVOWithoutBLOBsCount ########################## -->
  <select id="selectByVOWithoutBLOBsCount" resultClass="java.lang.Integer" parameterClass="platform.dto.ShopvalueQuery"> 
     select count(*) from shopvalue 
     <include refid="Shopvalue.where_Clause"/>  
  </select>
  
</sqlMap>
