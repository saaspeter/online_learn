<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="Rechargerecord">
<!-- ###################### rechargerecordResult ########################## -->
  <resultMap id="RechargerecordResult" class="platform.vo.Rechargerecord">
    <result column="rechargeID" property="rechargeid" jdbcType="BIGINT"/>
    <result column="baseAccountID" property="baseaccountid" jdbcType="BIGINT"/>
    <result column="userID" property="userid" jdbcType="BIGINT"/>
    <result column="userType" property="usertype" jdbcType="SMALLINT"/>
    <result column="rechargeTime" property="rechargetime" jdbcType="TIMESTAMP"/>
    <result column="rechargeMoney" property="rechargemoney" jdbcType="DOUBLE"/>
    <result column="moneyType" property="moneytype" jdbcType="VARCHAR"/>
    <result column="lcoinQuantity" property="lcoinquantity" jdbcType="DOUBLE"/>
    <result column="lcoinRemain" property="lcoinremain" jdbcType="DOUBLE"/>

  </resultMap>
    
<!-- ###################### where_Clause ########################## -->
  <sql id="where_Clause"> 
    <dynamic prepend="where"> 
      <isNotNull prepend="and" property="rechargeid"><![CDATA[ rechargeID=#rechargeid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="baseaccountid"><![CDATA[ baseAccountID=#baseaccountid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="userid"><![CDATA[ userID=#userid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="and" property="usertype"><![CDATA[ userType=#usertype:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="and" property="rechargetime"><![CDATA[ rechargeTime=#rechargetime:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="and" property="rechargemoney"><![CDATA[ rechargeMoney=#rechargemoney:DOUBLE# ]]></isNotNull>
      <isNotEmpty prepend="and" property="moneytype"><![CDATA[ moneyType=#moneytype:VARCHAR# ]]></isNotEmpty>
      <isNotNull prepend="and" property="lcoinquantity"><![CDATA[ lcoinQuantity=#lcoinquantity:DOUBLE# ]]></isNotNull>
      <isNotNull prepend="and" property="lcoinremain"><![CDATA[ lcoinRemain=#lcoinremain:DOUBLE# ]]></isNotNull>

    </dynamic>
  </sql>
  
<!-- ###################### selectAll ########################## -->
  <select id="selectAll" resultMap="RechargerecordResult"> 
     select 
         rechargeID,
    baseAccountID,
    userID,
    userType,
    rechargeTime,
    rechargeMoney,
    moneyType,
    lcoinQuantity,
    lcoinRemain 
     from rechargerecord
  </select>
    
<!-- ###################### selectByPK ########################## -->
  <select id="selectByPK" resultMap="RechargerecordResult" parameterClass="java.lang.Long"> 
     select 
         rechargeID,
    baseAccountID,
    userID,
    userType,
    rechargeTime,
    rechargeMoney,
    moneyType,
    lcoinQuantity,
    lcoinRemain 
     from rechargerecord 
     where rechargeID = #value#
  </select>
   
<!-- ###################### selectByVO ########################## -->
  <select id="selectByVO" resultMap="RechargerecordResult" parameterClass="platform.dto.RechargerecordQuery"> 
     select 
         rechargeID,
    baseAccountID,
    userID,
    userType,
    rechargeTime,
    rechargeMoney,
    moneyType,
    lcoinQuantity,
    lcoinRemain
     from rechargerecord
    <include refid="Rechargerecord.where_Clause"/>  
    <isNotNull property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotNull> 
  </select>
  
<!-- ###################### insert ########################## -->
  <insert id="insert" parameterClass="platform.vo.Rechargerecord"> 
     insert into rechargerecord
     (     rechargeID,
    baseAccountID,
    userID,
    userType,
    rechargeTime,
    rechargeMoney,
    moneyType,
    lcoinQuantity,
    lcoinRemain ) 
    values 
     (     #rechargeid:BIGINT#, 
    #baseaccountid:BIGINT#, 
    #userid:BIGINT#, 
    #usertype:SMALLINT#, 
    #rechargetime:TIMESTAMP#, 
    #rechargemoney:DOUBLE#, 
    #moneytype:VARCHAR#, 
    #lcoinquantity:DOUBLE#, 
    #lcoinremain:DOUBLE# )
	 <selectKey resultClass="java.lang.Long" keyProperty="rechargeid" >  
        SELECT   LAST_INSERT_ID()  
     </selectKey> 
  </insert>
  
<!-- ###################### updateByPK ########################## -->
  <update id="updateByPK" parameterClass="platform.vo.Rechargerecord"> 
     update rechargerecord
    <dynamic prepend="set"> 
      <isNotNull prepend="," property="baseaccountid"><![CDATA[ baseAccountID=#baseaccountid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="," property="userid"><![CDATA[ userID=#userid:BIGINT# ]]></isNotNull>
      <isNotNull prepend="," property="usertype"><![CDATA[ userType=#usertype:SMALLINT# ]]></isNotNull>
      <isNotNull prepend="," property="rechargetime"><![CDATA[ rechargeTime=#rechargetime:TIMESTAMP# ]]></isNotNull>
      <isNotNull prepend="," property="rechargemoney"><![CDATA[ rechargeMoney=#rechargemoney:DOUBLE# ]]></isNotNull>
      <isNotNull prepend="," property="moneytype"><![CDATA[ moneyType=#moneytype:VARCHAR# ]]></isNotNull>
      <isNotNull prepend="," property="lcoinquantity"><![CDATA[ lcoinQuantity=#lcoinquantity:DOUBLE# ]]></isNotNull>
      <isNotNull prepend="," property="lcoinremain"><![CDATA[ lcoinRemain=#lcoinremain:DOUBLE# ]]></isNotNull>

    </dynamic> where rechargeID = #rechargeid:BIGINT#
  </update>
  
<!-- ###################### deleteByPK ########################## -->
  <delete id="deleteByPK" parameterClass="java.lang.Long"> 
     delete from rechargerecord where rechargeID = #value#
  </delete>
  
  <!-- ###################### delByUserID ########################## -->
  <delete id="delByUserID" parameterClass="java.lang.Long"> 
     delete from rechargerecord where userID = #value#
  </delete>
  
    <!-- ###################### delByAccountID ########################## -->
  <delete id="delByAccountID" parameterClass="java.lang.Long"> 
     delete from rechargerecord where baseAccountID = #value#
  </delete>
  
<!-- ###################### deleteByVO ########################## -->
  <delete id="deleteByVO" parameterClass="platform.dto.RechargerecordQuery"> 
     delete from rechargerecord
     <include refid="Rechargerecord.where_Clause"/> 
  </delete>
  
<!-- ###################### selectAllCount ########################## -->
  <select id="selectAllCount" resultClass="java.lang.Integer"> 
     select count(*) from rechargerecord
  </select>
  
<!-- ###################### selectByVOCount ########################## -->
  <select id="selectByVOCount" resultClass="java.lang.Integer" parameterClass="platform.dto.RechargerecordQuery"> 
     select count(*) from rechargerecord
     <include refid="Rechargerecord.where_Clause"/>  
     <isNotNull property="order_By_Clause"><![CDATA[ order by $order_By_Clause$ ]]></isNotNull> 
  </select>
    
</sqlMap>
